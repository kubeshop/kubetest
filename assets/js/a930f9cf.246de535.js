"use strict";(self.webpackChunktestkube_documentation=self.webpackChunktestkube_documentation||[]).push([[4675],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>d});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=n.createContext({}),u=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=u(e.components);return n.createElement(i.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=u(a),d=r,b=m["".concat(i,".").concat(d)]||m[d]||c[d]||l;return a?n.createElement(b,o(o({ref:t},p),{},{components:a})):n.createElement(b,o({ref:t},p))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=m;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var u=2;u<l;u++)o[u]=a[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},85162:(e,t,a)=>{a.d(t,{Z:()=>o});var n=a(67294),r=a(86010);const l="tabItem_Ymn6";function o(e){let{children:t,hidden:a,className:o}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,o),hidden:a},t)}},74866:(e,t,a)=>{a.d(t,{Z:()=>N});var n=a(87462),r=a(67294),l=a(86010),o=a(12466),s=a(76775),i=a(91980),u=a(67392),p=a(50012);function c(e){return function(e){var t;return(null==(t=r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})))?void 0:t.filter(Boolean))??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:r}}=e;return{value:t,label:a,attributes:n,default:r}}))}function m(e){const{values:t,children:a}=e;return(0,r.useMemo)((()=>{const e=t??c(a);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function d(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function b(e){let{queryString:t=!1,groupId:a}=e;const n=(0,s.k6)(),l=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,i._X)(l),(0,r.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(n.location.search);t.set(l,e),n.replace({...n.location,search:t.toString()})}),[l,n])]}function f(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,l=m(e),[o,s]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!d({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:l}))),[i,u]=b({queryString:a,groupId:n}),[c,f]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,l]=(0,p.Nk)(a);return[n,(0,r.useCallback)((e=>{a&&l.set(e)}),[a,l])]}({groupId:n}),h=(()=>{const e=i??c;return d({value:e,tabValues:l})?e:null})();(0,r.useLayoutEffect)((()=>{h&&s(h)}),[h]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!d({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);s(e),u(e),f(e)}),[u,f,l]),tabValues:l}}var h=a(72389);const k="tabList__CuJ",y="tabItem_LNqP";function g(e){let{className:t,block:a,selectedValue:s,selectValue:i,tabValues:u}=e;const p=[],{blockElementScrollPositionUntilNextRender:c}=(0,o.o5)(),m=e=>{const t=e.currentTarget,a=p.indexOf(t),n=u[a].value;n!==s&&(c(t),i(n))},d=e=>{var t;let a=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const t=p.indexOf(e.currentTarget)+1;a=p[t]??p[0];break}case"ArrowLeft":{const t=p.indexOf(e.currentTarget)-1;a=p[t]??p[p.length-1];break}}null==(t=a)||t.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":a},t)},u.map((e=>{let{value:t,label:a,attributes:o}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,key:t,ref:e=>p.push(e),onKeyDown:d,onClick:m},o,{className:(0,l.Z)("tabs__item",y,null==o?void 0:o.className,{"tabs__item--active":s===t})}),a??t)})))}function v(e){let{lazy:t,children:a,selectedValue:n}=e;const l=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},l.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function T(e){const t=f(e);return r.createElement("div",{className:(0,l.Z)("tabs-container",k)},r.createElement(g,(0,n.Z)({},e,t)),r.createElement(v,(0,n.Z)({},e,t)))}function N(e){const t=(0,h.Z)();return r.createElement(T,(0,n.Z)({key:String(t)},e))}},71323:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>u,toc:()=>c});var n=a(87462),r=(a(67294),a(3905)),l=a(74866),o=a(85162);const s={},i="Templates",u={unversionedId:"articles/templates",id:"articles/templates",title:"Templates",description:"Templates allow you to store templates for other resources used in Testkube. We support a list of templates job | container | cronjob | scraper | pvc | webhook. To define templates in Testkube, you'll need to provide a template body (in Golang template format) and a type of the template.",source:"@site/docs/articles/templates.mdx",sourceDirName:"articles",slug:"/articles/templates",permalink:"/articles/templates",draft:!1,editUrl:"https://github.com/kubeshop/testkube/docs/docs/articles/templates.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Test and Test Suite Execution CRDs",permalink:"/articles/test-executions"},next:{title:"OAuth for CLI",permalink:"/articles/oauth-cli"}},p={},c=[{value:"Creating a Template",id:"creating-a-template",level:2},{value:"Using Templates",id:"using-templates",level:3}],m={toc:c};function d(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"templates"},"Templates"),(0,r.kt)("p",null,"Templates allow you to store templates for other resources used in Testkube. We support a list of templates job | container | cronjob | scraper | pvc | webhook. To define templates in Testkube, you'll need to provide a template body (in Golang template format) and a type of the template."),(0,r.kt)("p",null,"TestKube provides access to the ",(0,r.kt)("a",{parentName:"p",href:"http://masterminds.github.io/sprig/"},"Sprig")," functions library in templates."),(0,r.kt)("h2",{id:"creating-a-template"},"Creating a Template"),(0,r.kt)("p",null,"The template can be created using the API, CLI, or a Custom Resource."),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"api",label:"API",mdxType:"TabItem"},"If you prefer to use the API for creating a template, please visit the API spec for templates in the doc below.",(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/openapi"},"OpenAPI spec"))),(0,r.kt)(o.Z,{value:"cli",label:"CLI",mdxType:"TabItem"},"Templates can be created with the Testkube CLI using the `create template` command.",(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"kubectl testkube create template --name job-template --template-type job --body job-template.yaml\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"--name")," - Your template name (in this case ",(0,r.kt)("inlineCode",{parentName:"p"},"job-template"),").\n",(0,r.kt)("inlineCode",{parentName:"p"},"--template-type")," - Your template type (in this case ",(0,r.kt)("inlineCode",{parentName:"p"},"job")," for prebuilt executors).\n",(0,r.kt)("inlineCode",{parentName:"p"},"--body")," - A path to the file with job template content")),(0,r.kt)(o.Z,{value:"crd",label:"Custom Resource",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="template.yaml"',title:'"template.yaml"'},"apiVersion: tests.testkube.io/v1\nkind: Template\nmetadata:\n  name: job-template\n  namespace: testkube\nspec:\n  type: job\n  body: <YOUR_TEMPLATE_BODY>\n")),(0,r.kt)("p",null,"Where <YOUR_TEMPLATE_BODY> should be replaced with the Kubernetes job definition in Golang template format."),(0,r.kt)("p",null,"And then apply with:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"kubectl apply -f template.yaml\n")))),(0,r.kt)("h3",{id:"using-templates"},"Using Templates"),(0,r.kt)("p",null,"You will need to refer to a template in the corresponding reference field of the resource."),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"api",label:"API",mdxType:"TabItem"},(0,r.kt)("p",null,"Check templateReference fields in API spec. For example, Test -> executionRequest -> jobTemplateReference field.\n",(0,r.kt)("a",{parentName:"p",href:"/openapi"},"OpenAPI spec"))),(0,r.kt)(o.Z,{value:"cli",label:"CLI",mdxType:"TabItem"},(0,r.kt)("p",null,"Templates can be created with the Testkube CLI using the ",(0,r.kt)("inlineCode",{parentName:"p"},"create template")," command."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'kubectl testkube create test --name template-test --type k6/script --job-template-reference=job-template --test-content-type git --git-uri  "https://github.com/kubeshop/testkube.git" --git-branch main --git-path test/k6/executor-tests/k6-smoke-test.js\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"--name")," - Your test name (in this case ",(0,r.kt)("inlineCode",{parentName:"p"},"template-test"),").\n",(0,r.kt)("inlineCode",{parentName:"p"},"--type")," - Your test type (in this case ",(0,r.kt)("inlineCode",{parentName:"p"},"k6/script"),").\n",(0,r.kt)("inlineCode",{parentName:"p"},"--job-template-reference")," - Job template reference (in this case ",(0,r.kt)("inlineCode",{parentName:"p"},"job-template"),").\n",(0,r.kt)("inlineCode",{parentName:"p"},"--test-content-type")," - Test content type (in this case ",(0,r.kt)("inlineCode",{parentName:"p"},"git"),").\n",(0,r.kt)("inlineCode",{parentName:"p"},"--git-uri")," - Git uri to repository (in this case ",(0,r.kt)("inlineCode",{parentName:"p"},"https://github.com/kubeshop/testkube.git"),").\n",(0,r.kt)("inlineCode",{parentName:"p"},"--git-branch")," - Git branch to use (in this case ",(0,r.kt)("inlineCode",{parentName:"p"},"main"),").\n",(0,r.kt)("inlineCode",{parentName:"p"},"--git-path")," - Git path to the test (in this case ",(0,r.kt)("inlineCode",{parentName:"p"},"test/k6/executor-tests/k6-smoke-test.js"),").")),(0,r.kt)(o.Z,{value:"crd",label:"Custom Resource",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="test.yaml"',title:'"test.yaml"'},"apiVersion: tests.testkube.io/v3\nkind: Test\nmetadata:\n  name: template-test\n  namespace: testkube\nspec:\n  type: k6/script\n  content:\n    type: git\n    repository:\n      type: git\n      uri: https://github.com/kubeshop/testkube.git\n      branch: main\n      path: test/k6/executor-tests/k6-smoke-test.js\n      authType: basic\n  executionRequest:\n    jobTemplateReference: job-template\n")))))}d.isMDXComponent=!0}}]);