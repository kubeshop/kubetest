"use strict";(self.webpackChunktestkube_documentation=self.webpackChunktestkube_documentation||[]).push([[8011],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,u=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=s(n),m=i,f=p["".concat(u,".").concat(m)]||p[m]||c[m]||o;return n?r.createElement(f,a(a({ref:t},d),{},{components:n})):r.createElement(f,a({ref:t},d))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=p;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var s=2;s<o;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},81647:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>a,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=n(87462),i=(n(67294),n(3905));const o={},a=void 0,l={unversionedId:"cli/testkube_init_init",id:"cli/testkube_init_init",title:"testkube_init_init",description:"testkube init init",source:"@site/docs/cli/testkube_init_init.md",sourceDirName:"cli",slug:"/cli/testkube_init_init",permalink:"/cli/testkube_init_init",draft:!1,editUrl:"https://github.com/kubeshop/testkube/tree/develop/docs/docs/cli/testkube_init_init.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"testkube_init_demo",permalink:"/cli/testkube_init_demo"},next:{title:"testkube_init_standalone-agent",permalink:"/cli/testkube_init_standalone-agent"}},u={},s=[{value:"testkube init init",id:"testkube-init-init",level:2},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}],d={toc:s};function c(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"testkube-init-init"},"testkube init init"),(0,i.kt)("p",null,"Install Testkube Pro Agent and connect to Testkube Pro environment"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"testkube init init [flags]\n")),(0,i.kt)("h3",{id:"options"},"Options"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'      --agent-prefix string   usually don\'t need to be changed [required for custom cloud mode] (default "agent")\n      --agent-token string    Testkube Pro agent key [required for centralized mode]\n      --agent-uri string      Testkube Pro agent URI [required for centralized mode]\n      --api-prefix string     usually don\'t need to be changed [required for custom cloud mode] (default "api")\n      --chart string          chart name (usually you don\'t need to change it) (default "kubeshop/testkube")\n      --dry-run               dry run mode - only print commands that would be executed\n      --env-id string         Testkube Pro environment id [required for centralized mode]\n      --export                Export the values.yaml\n      --feature-logs-v2       Logs v2 feature flag\n  -h, --help                  help for init\n      --logs-prefix string    usually don\'t need to be changed [required for custom cloud mode] (default "logs")\n      --logs-uri string       Testkube Pro logs URI [required for centralized mode]\n      --master-insecure       should client connect in insecure mode (will use http instead of https)\n      --multi-namespace       multi namespace mode\n      --name string           installation name (usually you don\'t need to change it) (default "testkube")\n      --namespace string      namespace where to install (default "testkube")\n      --no-confirm            don\'t ask for confirmation - unatended installation mode\n      --no-minio              don\'t install MinIO\n      --no-mongo              don\'t install MongoDB\n      --no-operator           should operator be installed (for more instances in multi namespace mode it should be set to true)\n      --org-id string         Testkube Pro organization id [required for centralized mode]\n      --root-domain string    usually don\'t need to be changed [required for custom cloud mode] (default "testkube.io")\n      --ui-prefix string      usually don\'t need to be changed [required for custom cloud mode] (default "app")\n      --values string         path to Helm values file\n')),(0,i.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'  -a, --api-uri string          api uri, default value read from config if set (default "http://localhost:8088")\n  -c, --client string           client used for connecting to Testkube API one of proxy|direct|cluster (default "proxy")\n      --header stringToString   headers for direct client key value pair: --header name=value (default [])\n      --insecure                insecure connection for direct client\n      --oauth-enabled           enable oauth\n      --verbose                 show additional debug messages\n')),(0,i.kt)("h3",{id:"see-also"},"SEE ALSO"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/cli/testkube_init"},"testkube init"),"\t - Init Testkube profiles(standalone-agent|demo|agent)")))}c.isMDXComponent=!0}}]);