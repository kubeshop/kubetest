"use strict";(self.webpackChunktestkube_documentation=self.webpackChunktestkube_documentation||[]).push([[7944],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>k});var o=n(67294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,s=function(e,t){if(null==e)return{};var n,o,s={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var l=o.createContext({}),c=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=c(e.components);return o.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,s=e.mdxType,r=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=c(n),k=s,d=m["".concat(l,".").concat(k)]||m[k]||p[k]||r;return n?o.createElement(d,a(a({ref:t},u),{},{components:n})):o.createElement(d,a({ref:t},u))}));function k(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var r=n.length,a=new Array(r);a[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:s,a[1]=i;for(var c=2;c<r;c++)a[c]=n[c];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},71294:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var o=n(87462),s=(n(67294),n(3905));const r={},a="Migrating Tests, Test Suites and Executors to Test Workflows and Test Workflow Templates",i={unversionedId:"articles/test-workflow-migration",id:"articles/test-workflow-migration",title:"Migrating Tests, Test Suites and Executors to Test Workflows and Test Workflow Templates",description:"Introduction",source:"@site/docs/articles/test-workflow-migration.md",sourceDirName:"articles",slug:"/articles/test-workflow-migration",permalink:"/articles/test-workflow-migration",draft:!1,editUrl:"https://github.com/kubeshop/testkube/tree/develop/docs/docs/articles/test-workflow-migration.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Test Workflows - Matrix and Sharding",permalink:"/articles/test-workflows-matrix-and-sharding"},next:{title:"Creating Tests",permalink:"/articles/creating-tests"}},l={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Test Migration",id:"test-migration",level:2},{value:"Example - Test Workflow for Pre-built Postman Test",id:"example---test-workflow-for-pre-built-postman-test",level:3},{value:"Example - Test Workflow and Test Workflow Template for K6 Container Executor Test",id:"example---test-workflow-and-test-workflow-template-for-k6-container-executor-test",level:3},{value:"Test Suite Migration",id:"test-suite-migration",level:2}],u={toc:c};function p(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"migrating-tests-test-suites-and-executors-to-test-workflows-and-test-workflow-templates"},"Migrating Tests, Test Suites and Executors to Test Workflows and Test Workflow Templates"),(0,s.kt)("h2",{id:"introduction"},"Introduction"),(0,s.kt)("p",null,"In order to simplify the migration from Tests and Test Suites to Test Workflows you can\nuse ",(0,s.kt)("inlineCode",{parentName:"p"},"kubectl testkube migrate")," Testkube CLI command. It generates CRD definitions for\nTest Workflows and Test Workflow Templates using your existing Test, Test Suite and Executor\nresources. You will need to check prepared CRDs and apply them to your Kubernetes cluster.\nThis command contains 2 subcommands: ",(0,s.kt)("inlineCode",{parentName:"p"},"test")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"testsuite"),". It's possible to migrate all\nexisting resources or only particular resource."),(0,s.kt)("h2",{id:"test-migration"},"Test Migration"),(0,s.kt)("p",null,"Tests are migrated to Test Workflows, by default a Test Workflow Template is generated for\nthe Executor connected to the Test. Testkube Test Workflows are not generated for official\nTestkube Test Workflow Templates (K6, Postman, Cypress and Playwright ones)."),(0,s.kt)("h3",{id:"example---test-workflow-for-pre-built-postman-test"},"Example - Test Workflow for Pre-built Postman Test"),(0,s.kt)("p",null,"The original Test CRD:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: tests.testkube.io/v3\nkind: Test\nmetadata:\n  name: postman-executor-smoke\n  namespace: testkube\n  labels:\n    core-tests: executors\n    executor: postman-executor\n    test-type: postman-collection\nspec:\n  type: postman/collection\n  content:\n    type: git\n    repository:\n      type: git\n      uri: https://github.com/kubeshop/testkube.git\n      branch: main\n      path: test/postman/executor-tests/postman-executor-smoke.postman_collection.json\n  executionRequest:\n    args:\n      - "--env-var"\n      - "TESTKUBE_POSTMAN_PARAM=TESTKUBE_POSTMAN_PARAM_value"\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"kubectl testkube migrate test postman-executor-smoke\n")),(0,s.kt)("p",null,"The Resulting Test Workflow CRD:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},"kind: TestWorkflow\napiVersion: testworkflows.testkube.io/v1\nmetadata:\n  name: postman-executor-smoke\n  namespace: testkube\n  labels:\n    core-tests: executors\n    executor: postman-executor\n    test-type: postman-collection\nspec:\n  content:\n    git:\n      uri: https://github.com/kubeshop/testkube.git\n      revision: main\n      paths:\n      - test/postman/executor-tests/postman-executor-smoke.postman_collection.json\n  job:\n    labels:\n      core-tests: executors\n      executor: postman-executor\n      test-type: postman-collection\n  steps:\n  - name: Run tests\n    template:\n      name: official--postman--beta\n      config:\n        run: newman run --env-var TESTKUBE_POSTMAN_PARAM=TESTKUBE_POSTMAN_PARAM_value\n          /data/repo/test/postman/executor-tests/postman-executor-smoke.postman_collection.json\n")),(0,s.kt)("h3",{id:"example---test-workflow-and-test-workflow-template-for-k6-container-executor-test"},"Example - Test Workflow and Test Workflow Template for K6 Container Executor Test"),(0,s.kt)("p",null,"The original Test and Executor CRD:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: executor.testkube.io/v1\nkind: Executor\nmetadata:\n  name: container-executor-k6-0.43.1\n  namespace: testkube\nspec:\n  types:\n  - container-executor-k6-0.43.1/test\n  executor_type: container\n  image: grafana/k6:0.43.1\n\n---\n\napiVersion: tests.testkube.io/v3\nkind: Test\nmetadata:\n  name: container-executor-k6-smoke\n  namespace: testkube\n  labels:\n    core-tests: executors\n    executor: container-executor-k6-0.43.1\n    test-type: container-executor-k6-0-43-1-test\nspec:\n  type: container-executor-k6-0.43.1/test\n  content:\n    type: git\n    repository:\n      type: git\n      uri: https://github.com/kubeshop/testkube\n      branch: main\n      path: test/k6/executor-tests/k6-smoke-test-without-envs.js\n      workingDir: test/k6/executor-tests\n  executionRequest:\n    args:\n      - "run"\n      - "k6-smoke-test-without-envs.js"\n    activeDeadlineSeconds: 180\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"kubectl testkube migrate test container-executor-k6-smoke\n")),(0,s.kt)("p",null,"The resulting Test Workflow and Test Workflow Template CRD:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},"kind: TestWorkflowTemplate\napiVersion: testworkflows.testkube.io/v1\nmetadata:\n  name: container-executor-k6-0.43.1\n  namespace: testkube\nspec:\n  container:\n    image: grafana/k6:0.43.1\n  pod: {}\n\n---\n\nkind: TestWorkflow\napiVersion: testworkflows.testkube.io/v1\nmetadata:\n  name: container-executor-k6-smoke\n  namespace: testkube\n  labels:\n    core-tests: executors\n    executor: container-executor-k6-0.43.1\n    test-type: container-executor-k6-0-43-1-test\nspec:\n  use:\n  - name: container-executor-k6-0.43.1\n  content:\n    git:\n      uri: https://github.com/kubeshop/testkube\n      revision: main\n      paths:\n      - test/k6/executor-tests/k6-smoke-test-without-envs.js\n  container:\n    workingDir: /data/repo/test/k6/executor-tests\n  job:\n    labels:\n      core-tests: executors\n      executor: container-executor-k6-0.43.1\n      test-type: container-executor-k6-0-43-1-test\n    activeDeadlineSeconds: 180\n  steps:\n  - name: Run tests\n    run:\n      args:\n      - run\n      - k6-smoke-test-without-envs.js\n")),(0,s.kt)("h2",{id:"test-suite-migration"},"Test Suite Migration"),(0,s.kt)("p",null,"Test Suites are migrated to Test Workflows. By default Test Workflows are not generated for\nthe Tests used in the Test Suites."),(0,s.kt)("p",null,"The original Test Suite CRD:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: tests.testkube.io/v3\nkind: TestSuite\nmetadata:\n  name: executor-container-k6-smoke-tests\n  namespace: testkube\n  labels:\n    core-tests: executors\nspec:\n  description: "container executor k6 smoke tests"\n  steps:\n  - stopOnFailure: false\n    execute:\n    - test: k6-executor-smoke\n\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"kubectl testkube migrate testsuite executor-container-k6-smoke-tests\n")),(0,s.kt)("p",null,"The resulting Test Workflow CRD:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},"kind: TestWorkflow\napiVersion: testworkflows.testkube.io/v1\nmetadata:\n  name: executor-container-k6-smoke-tests\n  namespace: testkube\n  labels:\n    core-tests: executors\ndescription: container executor k6 smoke tests\nspec:\n  job:\n    labels:\n      core-tests: executors\n  steps:\n  - name: Run test workflows\n    optional: true\n    steps:\n    - name: Run tests\n      execute:\n        workflows:\n        - name: k6-executor-smoke\n")))}p.isMDXComponent=!0}}]);