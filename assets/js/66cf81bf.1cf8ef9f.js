"use strict";(self.webpackChunktestkube_documentation=self.webpackChunktestkube_documentation||[]).push([[810],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var a=n(67294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,s=function(e,t){if(null==e)return{};var n,a,s={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var u=a.createContext({}),l=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=l(e.components);return a.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,s=e.mdxType,o=e.originalType,u=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),k=l(n),d=s,b=k["".concat(u,".").concat(d)]||k[d]||p[d]||o;return n?a.createElement(b,r(r({ref:t},c),{},{components:n})):a.createElement(b,r({ref:t},c))}));function d(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var o=n.length,r=new Array(o);r[0]=k;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:s,r[1]=i;for(var l=2;l<o;l++)r[l]=n[l];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},9028:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var a=n(87462),s=(n(67294),n(3905));const o={},r="Testkube Gitlab CI",i={unversionedId:"articles/gitlab",id:"articles/gitlab",title:"Testkube Gitlab CI",description:"The Testkube GitLab CI/CD integration facilitates the installation of Testkube and allows the execution of any Testkube CLI command within a GitLab CI/CD pipeline. This integration can be seamlessly incorporated into your GitLab repositories to enhance your CI/CD workflows.",source:"@site/docs/articles/gitlab.md",sourceDirName:"articles",slug:"/articles/gitlab",permalink:"/articles/gitlab",draft:!1,editUrl:"https://github.com/kubeshop/testkube/docs/docs/articles/gitlab.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Testkube GitHub Action",permalink:"/articles/github-actions"},next:{title:"Testkube Jenkins",permalink:"/articles/jenkins"}},u={},l=[{value:"Testkube Cloud",id:"testkube-cloud",level:2},{value:"How to configure Testkube CLI action for TK Cloud and run a test",id:"how-to-configure-testkube-cli-action-for-tk-cloud-and-run-a-test",level:3},{value:"Testkube OSS",id:"testkube-oss",level:2},{value:"How to configure Testkube CLI action for TK OSS and run a test",id:"how-to-configure-testkube-cli-action-for-tk-oss-and-run-a-test",level:3},{value:"How to configure Testkube CLI action for TK OSS and run a test",id:"how-to-configure-testkube-cli-action-for-tk-oss-and-run-a-test-1",level:3},{value:"How to connect to GKE (Google Kubernetes Engine) cluster and run a test",id:"how-to-connect-to-gke-google-kubernetes-engine-cluster-and-run-a-test",level:3}],c={toc:l};function p(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"testkube-gitlab-ci"},"Testkube Gitlab CI"),(0,s.kt)("p",null,"The Testkube GitLab CI/CD integration facilitates the installation of Testkube and allows the execution of any ",(0,s.kt)("a",{parentName:"p",href:"https://docs.testkube.io/cli/testkube"},"Testkube CLI")," command within a GitLab CI/CD pipeline. This integration can be seamlessly incorporated into your GitLab repositories to enhance your CI/CD workflows.\nThe integration offers a versatile approach to align with your pipeline requirements and is compatible with Testkube Cloud, Testkube Enterprise, and the open-source Testkube platform. It enables GitLab users to leverage the powerful features of Testkube directly within their CI/CD pipelines, ensuring efficient and flexible test execution."),(0,s.kt)("h2",{id:"testkube-cloud"},"Testkube Cloud"),(0,s.kt)("h3",{id:"how-to-configure-testkube-cli-action-for-tk-cloud-and-run-a-test"},"How to configure Testkube CLI action for TK Cloud and run a test"),(0,s.kt)("p",null,"To use this Gitlab CI for ",(0,s.kt)("a",{parentName:"p",href:"https://cloud.testkube.io/"},"Testkube Cloud"),", you need to create an ",(0,s.kt)("a",{parentName:"p",href:"https://docs.testkube.io/testkube-cloud/articles/organization-management/#api-tokens"},"API token"),".\nThen, pass the ",(0,s.kt)("strong",{parentName:"p"},"organization")," and ",(0,s.kt)("strong",{parentName:"p"},"environment")," IDs, along with the ",(0,s.kt)("strong",{parentName:"p"},"token")," and other parameters specific for your use case."),(0,s.kt)("p",null,"If a test is already created, you can run it using the command ",(0,s.kt)("inlineCode",{parentName:"p"},"testkube run test test-name -f")," . However, if you need to create a test in this workflow, please add a creation command, e.g.: ",(0,s.kt)("inlineCode",{parentName:"p"},"testkube create test --name test-name --file path_to_file.json"),"."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},'stages:\n  - setup\n  - test\n\nvariables:\n  TESTKUBE_AGENT_TOKEN: tkcapi_0123456789abcdef0123456789abcd\n  TESTKUBE_ORG_ID: tkcorg_0123456789abcdef\n  TESTKUBE_ENV_ID: tkcenv_fedcba9876543210\n\nsetup-testkube:\n  stage: setup\n  script:\n    - echo "Installing Testkube..."\n    - curl -sSLf https://get.testkube.io | sh\n    - testkube cloud init --agent-token $TESTKUBE_AGENT_TOKEN --org-id $TESTKUBE_ORG_ID --env-id $TESTKUBE_ENV_ID \n\nrun-testkube-test:\n  stage: test\n  script:\n    - echo "Running Testkube test..."\n    - testkube run test test-name -f\n')),(0,s.kt)("p",null,"It is recommended that sensitive values should never be stored as plaintext in workflow files, but rather as ",(0,s.kt)("a",{parentName:"p",href:"https://docs.gitlab.com/ee/ci/variables/"},"variables"),".  Secrets can be configured at the organization, repository, or environment level, and allow you to store sensitive information in Gitlab."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},'stages:\n  - setup\n  - test\n\nsetup-testkube:\n  stage: setup\n  script:\n    - echo "Installing Testkube..."\n    - curl -sSLf https://get.testkube.io | sh\n    - testkube cloud init --agent-token $TESTKUBE_AGENT_TOKEN --org-id $TESTKUBE_ORG_ID --env-id $TESTKUBE_ENV_ID \n\nrun-testkube-test:\n  stage: test\n  script:\n    - echo "Running Testkube test..."\n    - testkube run test test-name -f\n')),(0,s.kt)("h2",{id:"testkube-oss"},"Testkube OSS"),(0,s.kt)("h3",{id:"how-to-configure-testkube-cli-action-for-tk-oss-and-run-a-test"},"How to configure Testkube CLI action for TK OSS and run a test"),(0,s.kt)("p",null,"To connect to the self-hosted instance, you need to have ",(0,s.kt)("strong",{parentName:"p"},"kubectl")," configured for accessing your Kubernetes cluster, and pass an optional namespace, if Testkube is not deployed in the default ",(0,s.kt)("strong",{parentName:"p"},"testkube")," namespace. "),(0,s.kt)("p",null,"If a test is already created, you can run it using the command ",(0,s.kt)("inlineCode",{parentName:"p"},"testkube run test test-name -f")," . However, if you need to create a test in this workflow, please add a creation command, e.g.: ",(0,s.kt)("inlineCode",{parentName:"p"},"testkube create test --name test-name --file path_to_file.json"),"."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},'stages:\n  - setup\n  - test\n\nvariables:\n  NAMESPACE: custom-testkube\n\nsetup-testkube:\n  stage: setup\n  script:\n    - echo "Installing Testkube..."\n    - curl -sSLf https://get.testkube.io | sh\n    - testkube cloud init --namespace $NAMESPACE\n\nrun-testkube-test:\n  stage: test\n  script:\n    - echo "Running Testkube test..."\n    - testkube run test test-name -f\n')),(0,s.kt)("p",null,"The steps to connect to your Kubernetes cluster differ for each provider. You should check the docs of your Cloud provider for how to connect to the Kubernetes cluster from Gitlab CI."),(0,s.kt)("h3",{id:"how-to-configure-testkube-cli-action-for-tk-oss-and-run-a-test-1"},"How to configure Testkube CLI action for TK OSS and run a test"),(0,s.kt)("p",null,"This workflow establishes a connection to EKS cluster and creates and runs a test using TK CLI. In this example we also use gitlab variables not to reveal sensitive data. Please make sure that the following points are satisfied:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"The ",(0,s.kt)("strong",{parentName:"li"},(0,s.kt)("em",{parentName:"strong"},"AwsAccessKeyId")),", ",(0,s.kt)("strong",{parentName:"li"},(0,s.kt)("em",{parentName:"strong"},"AwsSecretAccessKeyId"))," secrets should contain your AWS IAM keys with proper permissions to connect to EKS cluster."),(0,s.kt)("li",{parentName:"ul"},"The ",(0,s.kt)("strong",{parentName:"li"},(0,s.kt)("em",{parentName:"strong"},"AwsRegion"))," secret should contain AWS region where EKS is"),(0,s.kt)("li",{parentName:"ul"},"Tke ",(0,s.kt)("strong",{parentName:"li"},"EksClusterName")," secret points to the name of EKS cluster you want to connect.")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},'stages:\n  - setup\n\nsetup-testkube:\n  stage: setup\n  image: amazon/aws-cli\n  script:\n    - apt-get update && apt-get install -y curl\n    - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"\n    - install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl\n    - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID\n    - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY\n    - aws configure set region $AWS_REGION\n    - aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION\n    - echo "Installing Testkube..."\n    - curl -sSLf https://get.testkube.io | sh\n    - testkube cloud init --agent-token $TESTKUBE_AGENT_TOKEN --org-id $TESTKUBE_ORG_ID --env-id $TESTKUBE_ENV_ID\n    - echo "Running Testkube test..."\n    - testkube run test test-name -f\n')),(0,s.kt)("h3",{id:"how-to-connect-to-gke-google-kubernetes-engine-cluster-and-run-a-test"},"How to connect to GKE (Google Kubernetes Engine) cluster and run a test"),(0,s.kt)("p",null,"This example connects to a k8s cluster in Google Cloud, creates and runs a test using Testkube Gitlab CI. Please make sure that the following points are satisfied:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"The ",(0,s.kt)("strong",{parentName:"li"},(0,s.kt)("em",{parentName:"strong"},"GKE Sevice Account"))," should be created prior in Google Cloud and added to Gitlab CI variables along with ",(0,s.kt)("strong",{parentName:"li"},(0,s.kt)("em",{parentName:"strong"},"GKE Project"))," value;"),(0,s.kt)("li",{parentName:"ul"},"The ",(0,s.kt)("strong",{parentName:"li"},(0,s.kt)("em",{parentName:"strong"},"GKE Cluster Name"))," and ",(0,s.kt)("strong",{parentName:"li"},(0,s.kt)("em",{parentName:"strong"},"GKE Zone"))," can be added as ",(0,s.kt)("a",{parentName:"li",href:"https://docs.gitlab.com/ee/ci/variables/"},"environmental variables")," in the workflow.")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},'stages:\n  - deploy\n\ndeploy_to_gke:\n  stage: deploy\n  image: google/cloud-sdk:latest\n  before_script:\n    - echo $GKE_SA_KEY | base64 -d > gke-sa-key.json\n    - gcloud auth activate-service-account --key-file=gke-sa-key.json\n    - gcloud config set project $GKE_PROJECT\n  script:\n    - gcloud --quiet auth configure-docker\n    - gcloud container clusters get-credentials $GKE_CLUSTER_NAME --zone $GKE_ZONE\n    - echo "Installing Testkube..."\n    - curl -sSLf https://get.testkube.io | sh\n    - testkube cloud init --agent-token $TESTKUBE_AGENT_TOKEN --org-id $TESTKUBE_ORG_ID --env-id $TESTKUBE_ENV_ID\n    - echo "Running Testkube test..."\n    - testkube run test test-name -f\n  after_script:\n    - rm gke-sa-key.json\n')))}p.isMDXComponent=!0}}]);