"use strict";(self.webpackChunktestkube_documentation=self.webpackChunktestkube_documentation||[]).push([[8321],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),c=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=c(n),m=o,f=p["".concat(u,".").concat(m)]||p[m]||d[m]||i;return n?r.createElement(f,a(a({ref:t},s),{},{components:n})):r.createElement(f,a({ref:t},s))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=p;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},1321:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=n(87462),o=(n(67294),n(3905));const i={},a="Configure Identity Providers",l={unversionedId:"testkube-pro-on-prem/articles/auth",id:"testkube-pro-on-prem/articles/auth",title:"Configure Identity Providers",description:"You can configure Testkube Pro On-Prem to authenticate users using different identity providers such as Azure AD, Google, Okta, and OIDC. To do this, you need to update the additionalConfig field in the Helm chart values with the appropriate configuration for each identity provider.",source:"@site/docs/testkube-pro-on-prem/articles/auth.md",sourceDirName:"testkube-pro-on-prem/articles",slug:"/testkube-pro-on-prem/articles/auth",permalink:"/testkube-pro-on-prem/articles/auth",draft:!1,editUrl:"https://github.com/kubeshop/testkube/tree/develop/docs/docs/testkube-pro-on-prem/articles/auth.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Helm Chart Installation and Usage Guide",permalink:"/testkube-pro-on-prem/articles/usage-guide"},next:{title:"How to Migrate from Testkube Core OSS to Testkube Pro On-Prem",permalink:"/testkube-pro-on-prem/articles/migrating-from-oss-to-pro"}},u={},c=[{value:"Quickstart",id:"quickstart",level:3},{value:"Static Users",id:"static-users",level:3},{value:"Azure AD",id:"azure-ad",level:3},{value:"Google",id:"google",level:3},{value:"Okta",id:"okta",level:3},{value:"OIDC",id:"oidc",level:3}],s={toc:c};function d(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"configure-identity-providers"},"Configure Identity Providers"),(0,o.kt)("p",null,"You can configure Testkube Pro On-Prem to authenticate users using different identity providers such as Azure AD, Google, Okta, and OIDC. To do this, you need to update the ",(0,o.kt)("inlineCode",{parentName:"p"},"additionalConfig")," field in the Helm chart values with the appropriate configuration for each identity provider."),(0,o.kt)("p",null,"For a list of all supported identity providers, see ",(0,o.kt)("a",{parentName:"p",href:"https://dexidp.io/docs/connectors/"},"Connectors"),"."),(0,o.kt)("p",null,"The examples below show how to configure Testkube Pro On-Prem with each identity provider by editing the ",(0,o.kt)("inlineCode",{parentName:"p"},"dex.configTemplate.additionalConfig")," field in the Helm chart values."),(0,o.kt)("h3",{id:"quickstart"},"Quickstart"),(0,o.kt)("p",null,"For a quickstart, or if you do not have an identity provider, you can configure Testkube Pro On-Prem to use static users.\nSee ",(0,o.kt)("a",{parentName:"p",href:"#static-users"},"Static Users"),"."),(0,o.kt)("h3",{id:"static-users"},"Static Users"),(0,o.kt)("p",null,"To configure Testkube Pro On-Prem with static users, add the following configuration to the ",(0,o.kt)("inlineCode",{parentName:"p"},"additionalConfig")," field:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"additionalConfig: |\n  enablePasswordDB: true\n  staticPasswords:\n    - email: <user email>\n      hash: <bcrypt hash of user password>\n      username: <username>\n")),(0,o.kt)("p",null,"Replace ",(0,o.kt)("inlineCode",{parentName:"p"},"<user email>"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"<bcrypt hash of user password>"),", and ",(0,o.kt)("inlineCode",{parentName:"p"},"<username>")," with your actual values."),(0,o.kt)("h3",{id:"azure-ad"},"Azure AD"),(0,o.kt)("p",null,"To configure Testkube Pro On-Prem with Azure AD, add the following configuration to the ",(0,o.kt)("inlineCode",{parentName:"p"},"additionalConfig")," field:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"additionalConfig: |\n  connectors:\n    - type: azuread\n      id: azuread\n      name: Azure AD\n      config:\n        clientID: <Azure AD client ID>\n        clientSecret: <Azure AD client secret>\n        redirectURI: <Testkube Pro On-Prem redirect URI>\n")),(0,o.kt)("p",null,"Replace ",(0,o.kt)("inlineCode",{parentName:"p"},"Azure AD client ID"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"Azure AD client secret"),", and ",(0,o.kt)("inlineCode",{parentName:"p"},"Testkube Pro On-Prem redirect URI")," with your actual Azure AD configuration values."),(0,o.kt)("h3",{id:"google"},"Google"),(0,o.kt)("p",null,"To configure Testkube Pro On-Prem with Google, add the following configuration to the 'additionalConfig' field:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"additionalConfig: |\n  connectors:\n    - type: google\n      id: google\n      name: Google\n      config:\n        clientID: <Google client ID>\n        clientSecret: <Google client secret>\n        redirectURI: <Testkube Pro On-Prem redirect URI>\n")),(0,o.kt)("p",null,"Replace ",(0,o.kt)("inlineCode",{parentName:"p"},"Google client ID"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"Google client secret"),", and ",(0,o.kt)("inlineCode",{parentName:"p"},"Testkube Pro On-Prem redirect URI")," with your actual Google configuration values."),(0,o.kt)("h3",{id:"okta"},"Okta"),(0,o.kt)("p",null,"To configure Testkube Pro On-Prem with Okta, add the following configuration to the ",(0,o.kt)("inlineCode",{parentName:"p"},"additionalConfig")," field:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"additionalConfig: |\n  connectors:\n    - type: okta\n      id: okta\n      name: Okta\n      config:\n        issuerURL: <Okta issuer URL>\n        clientID: <Okta client ID>\n        clientSecret: <Okta client secret>\n        redirectURI: <Testkube Pro On-Prem redirect URI>\n")),(0,o.kt)("p",null,"Replace ",(0,o.kt)("inlineCode",{parentName:"p"},"Okta issuer URL"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"Okta client ID"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"Okta client secret"),", and ",(0,o.kt)("inlineCode",{parentName:"p"},"Testkube Pro On-Prem redirect URI")," with your actual Okta configuration values."),(0,o.kt)("h3",{id:"oidc"},"OIDC"),(0,o.kt)("p",null,"To configure Testkube Pro On-Prem with an OIDC provider, add the following configuration to the ",(0,o.kt)("inlineCode",{parentName:"p"},"additionalConfig")," field:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"additionalConfig: |\n  connectors:\n    - type: oidc\n      id: oidc\n      name: OIDC\n      config:\n        issuerURL: <OIDC issuer URL>\n        clientID: <OIDC client ID>\n        clientSecret: <OIDC client secret>\n        redirectURI: <Testkube Pro On-Prem redirect URI>\n")))}d.isMDXComponent=!0}}]);