"use strict";(self.webpackChunktestkube_documentation=self.webpackChunktestkube_documentation||[]).push([[3540],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),p=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(o.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,o=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=p(n),f=r,d=m["".concat(o,".").concat(f)]||m[f]||c[f]||s;return n?a.createElement(d,i(i({ref:t},u),{},{components:n})):a.createElement(d,i({ref:t},u))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,i=new Array(s);i[0]=m;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<s;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},40921:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>c,frontMatter:()=>s,metadata:()=>l,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const s={},i="Test Workflows Examples - Expressions",l={unversionedId:"articles/test-workflows-examples-expressions",id:"articles/test-workflows-examples-expressions",title:"Test Workflows Examples - Expressions",description:"Expressions Language",source:"@site/docs/articles/test-workflows-examples-expressions.md",sourceDirName:"articles",slug:"/articles/test-workflows-examples-expressions",permalink:"/articles/test-workflows-examples-expressions",draft:!1,editUrl:"https://github.com/kubeshop/testkube/tree/develop/docs/docs/articles/test-workflows-examples-expressions.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Test Workflows Examples - Configuration",permalink:"/articles/test-workflows-examples-configuration"},next:{title:"Test Workflows Examples - Templates",permalink:"/articles/test-workflows-examples-templates"}},o={},p=[{value:"Expressions Language",id:"expressions-language",level:2},{value:"JSON-Native",id:"json-native",level:2},{value:"Math",id:"math",level:2},{value:"Built-in Variables",id:"built-in-variables",level:2},{value:"General Variables",id:"general-variables",level:3},{value:"Contextual Variables",id:"contextual-variables",level:3},{value:"Built-in Functions",id:"built-in-functions",level:2},{value:"Casting Functions",id:"casting-functions",level:3},{value:"General Functions",id:"general-functions",level:3},{value:"File System Functions",id:"file-system-functions",level:3}],u={toc:p};function c(e){let{components:t,...s}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,s,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"test-workflows-examples---expressions"},"Test Workflows Examples - Expressions"),(0,r.kt)("h2",{id:"expressions-language"},"Expressions Language"),(0,r.kt)("p",null,"We have designed a simple expressions language, that allows dynamic evaluation of different values."),(0,r.kt)("h2",{id:"json-native"},"JSON-Native"),(0,r.kt)("p",null,"It is built on JSON, so every JSON syntax is a valid expression value as well, like ",(0,r.kt)("inlineCode",{parentName:"p"},'[ "a", "b", "c" ]'),"."),(0,r.kt)("h2",{id:"math"},"Math"),(0,r.kt)("p",null,"You can do basic math easily, like ",(0,r.kt)("strong",{parentName:"p"},"config.workers * 5"),"."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Expressions",src:n(22280).Z,width:"720",height:"576"})," "),(0,r.kt)("h2",{id:"built-in-variables"},"Built-in Variables"),(0,r.kt)("h3",{id:"general-variables"},"General Variables"),(0,r.kt)("p",null,"There are some built-in variables available in most of the places;"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"env")," - Object has a reference to the environment variables."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"config")," - Object has a reference to defined configuration variables."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"execution")," - Object has some execution data.")),(0,r.kt)("h3",{id:"contextual-variables"},"Contextual Variables"),(0,r.kt)("p",null,"In some contexts, there are additional variables available."),(0,r.kt)("p",null,"As an example, while writing the condition, you can use variables like passed (bool), failed (bool), always (true), never (false), status (string) that refer to current status of the TestWorkflow."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Built-in Variables",src:n(96153).Z,width:"730",height:"400"})," "),(0,r.kt)("h2",{id:"built-in-functions"},"Built-in Functions"),(0,r.kt)("h3",{id:"casting-functions"},"Casting Functions"),(0,r.kt)("p",null,"There are some functions that help to cast or serialize values, such as ",(0,r.kt)("strong",{parentName:"p"},"int"),", ",(0,r.kt)("strong",{parentName:"p"},"json"),", ",(0,r.kt)("strong",{parentName:"p"},"tojson"),", ",(0,r.kt)("strong",{parentName:"p"},"yaml"),", and ",(0,r.kt)("strong",{parentName:"p"},"toyaml"),"."),(0,r.kt)("h3",{id:"general-functions"},"General Functions"),(0,r.kt)("p",null,"There are some functions that aid in working with data, i.e. ",(0,r.kt)("strong",{parentName:"p"},"join"),", ",(0,r.kt)("strong",{parentName:"p"},"split"),", ",(0,r.kt)("strong",{parentName:"p"},"floor"),", ",(0,r.kt)("strong",{parentName:"p"},"round"),", ",(0,r.kt)("strong",{parentName:"p"},"trim"),", ",(0,r.kt)("strong",{parentName:"p"},"len"),", ",(0,r.kt)("strong",{parentName:"p"},"map"),", ",(0,r.kt)("strong",{parentName:"p"},"filter"),", ",(0,r.kt)("strong",{parentName:"p"},"jq"),", ",(0,r.kt)("strong",{parentName:"p"},"shellparse")," or ",(0,r.kt)("strong",{parentName:"p"},"shellquote"),"."),(0,r.kt)("h3",{id:"file-system-functions"},"File System Functions"),(0,r.kt)("p",null,"You can as well read the file system in the Test Workflow to determine values based on that. You can read files with ",(0,r.kt)("strong",{parentName:"p"},"file")," function, or list files with ",(0,r.kt)("strong",{parentName:"p"},"glob"),"."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Built-in Functions",src:n(65253).Z,width:"722",height:"570"})))}c.isMDXComponent=!0},65253:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/built-in-functions-d786c32890643f552b30838c72563119.png"},96153:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/built-in-variables-a8dd979a3bd0c44fcaf98350318ed4ed.png"},22280:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/expressions-2d42f579fea2772a078ccd5381ed9e1c.png"}}]);