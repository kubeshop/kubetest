"use strict";(self.webpackChunktestkube_documentation=self.webpackChunktestkube_documentation||[]).push([[1605],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>g});var a=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=a.createContext({}),u=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=u(e.components);return a.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(t),g=o,m=d["".concat(s,".").concat(g)]||d[g]||p[g]||r;return t?a.createElement(m,i(i({ref:n},c),{},{components:t})):a.createElement(m,i({ref:n},c))}));function g(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,i=new Array(r);i[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var u=2;u<r;u++)i[u]=t[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},33442:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>u});var a=t(87462),o=(t(67294),t(3905));const r={},i="Advanced Install",l={unversionedId:"articles/install/advanced-install",id:"articles/install/advanced-install",title:"Advanced Install",description:"A variety of advanced topics to further customize your deployment.",source:"@site/docs/articles/install/advanced-install.md",sourceDirName:"articles/install",slug:"/articles/install/advanced-install",permalink:"/articles/install/advanced-install",draft:!1,editUrl:"https://github.com/kubeshop/testkube/tree/develop/docs/docs/articles/install/advanced-install.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Install Testkube with Helm",permalink:"/articles/install/install-with-helm"},next:{title:"Quickstart without Kubernetes",permalink:"/articles/install/quickstart-no-k8s"}},s={},u=[{value:"Organization Management",id:"organization-management",level:2},{value:"Bootstrap Configuration",id:"bootstrap-configuration",level:3},{value:"Invitations",id:"invitations",level:3},{value:"Custom Ingress Controller",id:"custom-ingress-controller",level:2},{value:"Bring Your Own Infra",id:"bring-your-own-infra",level:2},{value:"MongoDB",id:"mongodb",level:4},{value:"NATS",id:"nats",level:4},{value:"MinIO",id:"minio",level:4},{value:"Dex",id:"dex",level:4},{value:"Air-gapped Environments",id:"air-gapped-environments",level:2},{value:"Offline License",id:"offline-license",level:3},{value:"Artifactory and Other Registry Proxies",id:"artifactory-and-other-registry-proxies",level:3}],c={toc:u};function p(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"advanced-install"},"Advanced Install"),(0,o.kt)("p",null,"A variety of advanced topics to further customize your deployment."),(0,o.kt)("h2",{id:"organization-management"},"Organization Management"),(0,o.kt)("h3",{id:"bootstrap-configuration"},"Bootstrap Configuration"),(0,o.kt)("p",null,"By default, Testkube will automatically add users to the default organizations when they get invited. You can change the bootstrap configuration to change this behaviour programmatically."),(0,o.kt)("p",null,"The simplest configuration is as follows. It creates a default org and environment and users will automatically join as admin:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'testkube-cloud-api:\n  api:\n    features:\n      bootstrapOrg: <your-org>\n      bootstrapEnv: "Your first environment"\n      bootstrapAdmin: <you@example.com>\n')),(0,o.kt)("p",null,"You can use the full bootstrapConfig for more advanced settings:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-helm"},"testkube-cloud-api:\n  api:\n    features:\n      bootstrapConfig:\n        enabled: true\n        config:\n          organizations:\n            - name: prod_organization\n              environments:\n                - name: production_1\n                - name: production_2\n")),(0,o.kt)("p",null,"On startup, the ",(0,o.kt)("inlineCode",{parentName:"p"},"prod_organization")," organization with two environments, ",(0,o.kt)("inlineCode",{parentName:"p"},"production_1")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"production_2")," will be created."),(0,o.kt)("p",null,"Next, you can enhance the configuration to automatically add new users to organizations and environments with predefined roles. For example, the following config makes new users join ",(0,o.kt)("inlineCode",{parentName:"p"},"prod_organization")," as a member role and use ",(0,o.kt)("inlineCode",{parentName:"p"},"production_1")," environment as a run role:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-helm"},"      bootstrapConfig:\n        enabled: true\n        config:\n          default_organizations:\n            - prod_organization\n          organizations:\n            - name: prod_organization\n              default_role: member\n              default_environments:\n                - production_1\n              environments:\n                - name: production_1\n                  default_role: run\n                - name: production_2\n")),(0,o.kt)("p",null,"Note: The default organization and environment mapping only apply on first sign in. After, you can remove users from environments or change roles through the Testkube UI."),(0,o.kt)("p",null,"Additionally, by default, Testkube Pro creates a personal organization for every new user. When using the default organization and environment configuration, you can turn off personal organizations using the following config:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-helm"},"testkube-cloud-api:\n  api:\n    features:\n      disablePersonalOrgs: true\n")),(0,o.kt)("h3",{id:"invitations"},"Invitations"),(0,o.kt)("p",null,"Users will now have to be invited within the dashboard. You can configure the SMTP server and Testkube will send e-mail invitations, alternatively new users will join the organisation without explicitly accepting the invitation."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'testkube-cloud-api:\n  inviteMode: `email`\n  api:\n    email:\n      fromEmail: "no-reply@example.com"\n      fromName: "Testkube On-prem"\n    inviteMode: email\n    smtp:\n      host: <smtp host>\n      port: <smtp port>\n      username: <smtp username>\n      password: <smtp password>\n            # passwordSecretRef: <secret name>\n')),(0,o.kt)("h2",{id:"custom-ingress-controller"},"Custom Ingress Controller"),(0,o.kt)("p",null,"By default, Testkube uses the NGINX Ingress Controller to ensure the reliable functioning of gRPC and Websockets protocols."),(0,o.kt)("p",null,"More specifically, these annotations are added to configre NGINX and should not be changed:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'# gRPC Ingress:\nannotations:\n  nginx.ingress.kubernetes.io/proxy-body-size: 8m\n  nginx.ingress.kubernetes.io/client-header-timeout: "10800"\n  nginx.ingress.kubernetes.io/client-body-timeout: "10800"\n\n# WebSockets ingress:\nannotations:\n  nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"\n  nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"\n')),(0,o.kt)("p",null,"To use your own ingress controller, reach out to our support team and we\u2019ll gladly investigate your ingress of choice. Alternatively, you can give it a try yourself by deploying Testkube and seeing whether gRPC and WebSockets are working properly."),(0,o.kt)("h2",{id:"bring-your-own-infra"},"Bring Your Own Infra"),(0,o.kt)("p",null,"Testkube Enterprise supports integrating with existing infrastructure components such as MongoDB, NATS, Dex, etc. For production environments, it's recommended to use your own infra or to harden the sub-charts."),(0,o.kt)("h4",{id:"mongodb"},"MongoDB"),(0,o.kt)("p",null,"Testkube Enterprise uses MongoDB as a database for storing all the data.\nBy default, it will install a MongoDB instance using the Bitnami MongoDB Helm chart."),(0,o.kt)("p",null,"If you wish to use an existing MongoDB instance, you can configure the following values:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-helm"},"mongodb:\n  enabled: false\n\ntestkube-cloud-api:\n  api:\n    mongo:\n      dsn: <mongodb dsn (mongodb://...)>\n")),(0,o.kt)("h4",{id:"nats"},"NATS"),(0,o.kt)("p",null,"Testkube Enterprise uses NATS as a message broker for communication between API and Agents."),(0,o.kt)("p",null,"If you wish to use an existing NATS instance, you can configure the following values:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-helm"},"nats:\n  enabled: false\n\ntestkube-cloud-api:\n  api:\n    nats:\n      uri: <nats uri (nats://...)>\n")),(0,o.kt)("h4",{id:"minio"},"MinIO"),(0,o.kt)("p",null,"Testkube Enterprise uses MinIO as a storage backend for storing artifacts."),(0,o.kt)("p",null,"If you wish to use an existing MinIO instance, you can configure the following values:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-helm"},"testkube-cloud-api:\n  minio:\n    enabled: false\n  api:\n    minio: {} # check out the `testkube-cloud-api.api.minio` block in the values.yaml for all available settings\n")),(0,o.kt)("h4",{id:"dex"},"Dex"),(0,o.kt)("p",null,"Testkube Enterprise uses Dex as an identity provider."),(0,o.kt)("p",null,"If you wish to use an existing Dex instance, you can configure the following values:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-helm"},"global:\n  dex:\n    issuer: <dex issuer url>\ndex:\n  enabled: false\ntestkube-cloud-api:\n  api:\n    oauth: {} # check out the `testkube-cloud-api.api.oauth` block in the values.yaml for all available settings\n")),(0,o.kt)("h2",{id:"air-gapped-environments"},"Air-gapped Environments"),(0,o.kt)("h3",{id:"offline-license"},"Offline License"),(0,o.kt)("p",null,"By default, Testkube will work with licenses that require internet connectivity. These licenses have the following format: ",(0,o.kt)("inlineCode",{parentName:"p"},"XXXXXX-XXXXXX-XXXXXX-XXXXXX-XXXXXX-V3"),". However, if you want to use Testkube in offline environments you will need to use an offline license."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://testkube.io/contact"},"Contact support")," if you need an offline license."),(0,o.kt)("p",null,"Once you obtained an offline license, you should create a Shared Secret and afterwards"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"global:\n  enterpriseOfflineAccess: true\n  enterpriseLicenseSecretRef: testkube-enterprise-license\n")),(0,o.kt)("h3",{id:"artifactory-and-other-registry-proxies"},"Artifactory and Other Registry Proxies"),(0,o.kt)("p",null,"By default, Testkube will pull images from the ",(0,o.kt)("a",{parentName:"p",href:"https://docker.io"},"docker.io")," registry. You can override the image of each individual service."))}p.isMDXComponent=!0}}]);