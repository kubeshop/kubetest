"use strict";(self.webpackChunktestkube_documentation=self.webpackChunktestkube_documentation||[]).push([[770],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>b});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},s=Object.keys(e);for(r=0;r<s.length;r++)a=s[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)a=s[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var o=r.createContext({}),u=function(e){var t=r.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=u(e.components);return r.createElement(o.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,s=e.originalType,o=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=u(a),b=n,m=p["".concat(o,".").concat(b)]||p[b]||d[b]||s;return a?r.createElement(m,l(l({ref:t},c),{},{components:a})):r.createElement(m,l({ref:t},c))}));function b(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=a.length,l=new Array(s);l[0]=p;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"==typeof e?e:n,l[1]=i;for(var u=2;u<s;u++)l[u]=a[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}p.displayName="MDXCreateElement"},85162:(e,t,a)=>{a.d(t,{Z:()=>l});var r=a(67294),n=a(86010);const s="tabItem_Ymn6";function l(e){let{children:t,hidden:a,className:l}=e;return r.createElement("div",{role:"tabpanel",className:(0,n.Z)(s,l),hidden:a},t)}},74866:(e,t,a)=>{a.d(t,{Z:()=>E});var r=a(87462),n=a(67294),s=a(86010),l=a(12466),i=a(76775),o=a(91980),u=a(67392),c=a(50012);function d(e){return function(e){var t;return(null==(t=n.Children.map(e,(e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})))?void 0:t.filter(Boolean))??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:r,default:n}}=e;return{value:t,label:a,attributes:r,default:n}}))}function p(e){const{values:t,children:a}=e;return(0,n.useMemo)((()=>{const e=t??d(a);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function b(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:a}=e;const r=(0,i.k6)(),s=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,o._X)(s),(0,n.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(r.location.search);t.set(s,e),r.replace({...r.location,search:t.toString()})}),[s,r])]}function f(e){const{defaultValue:t,queryString:a=!1,groupId:r}=e,s=p(e),[l,i]=(0,n.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!b({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=a.find((e=>e.default))??a[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:s}))),[o,u]=m({queryString:a,groupId:r}),[d,f]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,s]=(0,c.Nk)(a);return[r,(0,n.useCallback)((e=>{a&&s.set(e)}),[a,s])]}({groupId:r}),v=(()=>{const e=o??d;return b({value:e,tabValues:s})?e:null})();(0,n.useLayoutEffect)((()=>{v&&i(v)}),[v]);return{selectedValue:l,selectValue:(0,n.useCallback)((e=>{if(!b({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),f(e)}),[u,f,s]),tabValues:s}}var v=a(72389);const h="tabList__CuJ",g="tabItem_LNqP";function y(e){let{className:t,block:a,selectedValue:i,selectValue:o,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:d}=(0,l.o5)(),p=e=>{const t=e.currentTarget,a=c.indexOf(t),r=u[a].value;r!==i&&(d(t),o(r))},b=e=>{var t;let a=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;a=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;a=c[t]??c[c.length-1];break}}null==(t=a)||t.focus()};return n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":a},t)},u.map((e=>{let{value:t,label:a,attributes:l}=e;return n.createElement("li",(0,r.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>c.push(e),onKeyDown:b,onClick:p},l,{className:(0,s.Z)("tabs__item",g,null==l?void 0:l.className,{"tabs__item--active":i===t})}),a??t)})))}function k(e){let{lazy:t,children:a,selectedValue:r}=e;const s=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=s.find((e=>e.props.value===r));return e?(0,n.cloneElement)(e,{className:"margin-top--md"}):null}return n.createElement("div",{className:"margin-top--md"},s.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==r}))))}function T(e){const t=f(e);return n.createElement("div",{className:(0,s.Z)("tabs-container",h)},n.createElement(y,(0,r.Z)({},e,t)),n.createElement(k,(0,r.Z)({},e,t)))}function E(e){const t=(0,v.Z)();return n.createElement(T,(0,r.Z)({key:String(t)},e))}},29674:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>b,frontMatter:()=>i,metadata:()=>u,toc:()=>d});var r=a(87462),n=(a(67294),a(3905)),s=a(74866),l=a(85162);const i={},o="Using Test Variables",u={unversionedId:"articles/adding-tests-variables",id:"articles/adding-tests-variables",title:"Using Test Variables",description:"To synchronize Testkube's feature set between the Testkube CLI and the Testkube Dashboard, Test Variables can be defined in the Testkube Dashboard. On the Tests screen, select a Test and click on the Settings tab and select Variables & Secrets:",source:"@site/docs/articles/adding-tests-variables.mdx",sourceDirName:"articles",slug:"/articles/adding-tests-variables",permalink:"/articles/adding-tests-variables",draft:!1,editUrl:"https://github.com/kubeshop/testkube/tree/develop/docs/docs/articles/adding-tests-variables.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Getting Results",permalink:"/articles/getting-tests-results"},next:{title:"Adding Timeouts",permalink:"/articles/adding-timeout"}},c={},d=[],p={toc:d};function b(e){let{components:t,...i}=e;return(0,n.kt)("wrapper",(0,r.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"using-test-variables"},"Using Test Variables"),(0,n.kt)(s.Z,{mdxType:"Tabs"},(0,n.kt)(l.Z,{value:"dashboard",label:"Dashboard",default:!0,mdxType:"TabItem"},(0,n.kt)("p",null,"To synchronize Testkube's feature set between the Testkube CLI and the Testkube Dashboard, Test Variables can be defined in the Testkube Dashboard. On the Tests screen, select a Test and click on the ",(0,n.kt)("strong",{parentName:"p"},"Settings")," tab and select ",(0,n.kt)("strong",{parentName:"p"},"Variables & Secrets"),":"),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Variable Tab",src:a(14189).Z,width:"1908",height:"962"})),(0,n.kt)("p",null,"Any variables already existing for that Test will be shown. To create a Test variable, click ",(0,n.kt)("strong",{parentName:"p"},"Add Variable")," and provide desired values."),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Add Variable",src:a(32058).Z,width:"1915",height:"960"})),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Variable Type",src:a(32600).Z,width:"1917",height:"967"})),(0,n.kt)("p",null,"The types available for Test variables are Basic, Secret and Secret Reference. ")),(0,n.kt)(l.Z,{value:"cli",label:"CLI",mdxType:"TabItem"},(0,n.kt)("p",null,"Depending on the type of the variables, the CLI offers multiple options on how to set these. Check\nthe details on the ",(0,n.kt)("a",{parentName:"p",href:"/cli/testkube_create_test"},"testkube create test")," command."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"  -s, --secret-variable stringArray                execution secret variable passed to executor\n      --secret-variable-reference stringToString   secret variable references in a form name1=secret_name1=secret_key1 (default [])\n  -v, --variable stringArray                       variable key value pair: --variable key1=value1\n      --variable-configmap stringArray             config map name used to map all keys to basis variables\n      --variable-secret stringArray                secret name used to map all keys to secret variables\n      --variables-file string                      variables file path, e.g. postman env file - will be passed to executor if supported\n"))),(0,n.kt)(l.Z,{value:"crd",label:"CRD",mdxType:"TabItem"},(0,n.kt)("p",null,"Setting basic and secret variables is also possible on the CRD level. They should be under the ",(0,n.kt)("inlineCode",{parentName:"p"},"executionRequest")," key. Consult the example below."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: tests.testkube.io/v3\nkind: Test\nmetadata:\n  name: example-test\n  namespace: testkube\n  labels:\n    executor: curl-container-executor\n    test-type: curl-container-test\nspec:\n  type: curl-container/test\n  executionRequest:\n    variables:\n      BASIC_VAR_NAME:\n        name: BASIC_VAR_NAME\n        value: "BASIC_VAR_VALUE"\n        type: basic\n      SECRET_REF_VAR_NAME:\n        name: SECRET_REF_VAR_NAME\n        type: secret\n        valueFrom:\n          secretKeyRef:\n            name: SECRET_REF_SECRET_NAME\n            key: SECRET_REF_KEY\n      SECRET_VAR_NAME:\n        name: SECRET_VAR_NAME\n        type: secret\n        valueFrom:\n          secretKeyRef:\n            name: example-test-testvars\n            key: SECRET_VAR_NAME\n')))))}b.isMDXComponent=!0},32058:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/add-variable-1.17-68f7502acb909e131b37ae8518a9e817.png"},14189:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/variable-tab-1.17-6e081f5495916a1cf507163ed4f72c98.png"},32600:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/variable-type-1.17-641bd6278c9f1dec47f371f61cad019a.png"}}]);