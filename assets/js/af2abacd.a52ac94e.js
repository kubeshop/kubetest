"use strict";(self.webpackChunktestkube_documentation=self.webpackChunktestkube_documentation||[]).push([[1231],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>k});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),p=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},m=function(e){var t=p(e.components);return r.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=p(n),k=o,f=c["".concat(i,".").concat(k)]||c[k]||u[k]||a;return n?r.createElement(f,s(s({ref:t},m),{},{components:n})):r.createElement(f,s({ref:t},m))}));function k(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=c;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:o,s[1]=l;for(var p=2;p<a;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},44773:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=n(87462),o=(n(67294),n(3905));const a={},s="Test Workflow Template",l={unversionedId:"articles/test-workflow-templates",id:"articles/test-workflow-templates",title:"Test Workflow Template",description:"TestWorkflow Templates allow you to define common properties/traits that you can reuse",source:"@site/docs/articles/test-workflow-templates.md",sourceDirName:"articles",slug:"/articles/test-workflow-templates",permalink:"/articles/test-workflow-templates",draft:!1,editUrl:"https://github.com/kubeshop/testkube/tree/develop/docs/docs/articles/test-workflow-templates.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Test Workflows",permalink:"/articles/test-workflows"},next:{title:"Creating Tests",permalink:"/articles/creating-tests"}},i={},p=[{value:"How does it work?",id:"how-does-it-work",level:2}],m={toc:p};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"test-workflow-template"},"Test Workflow Template"),(0,o.kt)("p",null,"TestWorkflow Templates allow you to define common properties/traits that you can reuse\nconsistently across your TestWorkflows. "),(0,o.kt)("p",null,"For example, with TestWorkflow Templates you can easily "),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"define specific ENV variables to be passed to all containers."),(0,o.kt)("li",{parentName:"ul"},"define a common Git Source for your tests."),(0,o.kt)("li",{parentName:"ul"},"define common setup or tearDown steps for your tests."),(0,o.kt)("li",{parentName:"ul"},"define specific commands or images to use for your tests, while still allowing a TestWorkflow to set\nthe version of the testing tool."),(0,o.kt)("li",{parentName:"ul"},"etc.")),(0,o.kt)("h2",{id:"how-does-it-work"},"How does it work?"),(0,o.kt)("p",null,"A TestWorkflowTemplate definition follows the same structure as a TestWorkflow, with the additional\nability to define configuration parameters that can be specified when the template is used."),(0,o.kt)("p",null,'TestWorkflowTemplates are "merged" into a referring TestWorkflow at run-time and the\nresulting TestWorkflow is executed by Testkube.'),(0,o.kt)("p",null,"For example, the template below defines the basics for running a k6 test, with parameters for which\nk6 version to use and which parameters to pass to k6:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'kind: TestWorkflowTemplate\napiVersion: testworkflows.testkube.io/v1\nmetadata:\n  name: example-template--k6 # Template name (mandatory) - example-template/k6\nspec:\n  config: # default config values\n    version:\n      description: k6 version to use\n      type: string\n      default: 0.49.0\n    params:\n      description: Additional params for the k6 run command\n      type: string\n      default: ""\n  steps: # steps to be executed\n  - name: Run k6 tests\n    container:\n      image: grafana/k6:{{ config.version }} # default values are assigned\n    shell: k6 run {{ config.params }}\n')),(0,o.kt)("p",null,'The template can then be "used" in a corresponding TestWorkflow step:'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'steps:\n  - name: Run from template\n    workingDir: /data/repo/test/k6/executor-tests\n    template: # template will be executed here\n      name: example-template/k6 # template name\n      config: # template config - values passed to Test Workflow Template\n        version: 0.48.0 # version override\n        params: "k6-smoke-test-without-envs.js"\n')),(0,o.kt)("p",null,"Full example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: testworkflows.testkube.io/v1\nkind: TestWorkflow\nmetadata:\n  name: k6-example-from-template\nspec:\n  container:\n    resources:\n      requests:\n        cpu: 128m\n        memory: 128Mi\n    workingDir: /data/repo/test/k6/executor-tests\n  steps:\n  - name: Checkout\n    content:\n      git:\n        uri: https://github.com/kubeshop/testkube\n        revision: main\n        paths:\n        - test/k6/executor-tests/k6-smoke-test-without-envs.js\n  - name: Run from template\n    workingDir: /data/repo/test/k6/executor-tests\n    template: # template will be executed here\n      name: example-template/k6 # template name\n      config: # template config - values passed to Test Workflow Template\n        version: 0.48.0 # version override\n        params: "k6-smoke-test-without-envs.js"\n')),(0,o.kt)("h1",{id:"example-test-workflow-templates"},"Example Test Workflow Templates"),(0,o.kt)("p",null,"Example Test Workflow Templates can be found in the Testkube repository:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/kubeshop/testkube/blob/develop/test/test-workflow-templates/cypress.yaml"},"Cypress")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/kubeshop/testkube/blob/develop/test/test-workflow-templates/k6.yaml"},"k6")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/kubeshop/testkube/blob/develop/test/test-workflow-templates/cypress.yaml"},"postman"))))}u.isMDXComponent=!0}}]);