"use strict";(self.webpackChunktestkube_documentation=self.webpackChunktestkube_documentation||[]).push([[8068],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=c(n),m=r,h=d["".concat(l,".").concat(m)]||d[m]||p[m]||s;return n?a.createElement(h,o(o({ref:t},u),{},{components:n})):a.createElement(h,o({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,o=new Array(s);o[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var c=2;c<s;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},23612:(e,t,n)=>{n.d(t,{Z:()=>h});var a=n(67294),r=n(86010),s=n(35281),o=n(95999);const i="admonition_LlT9",l="admonitionHeading_tbUL",c="admonitionIcon_kALy",u="admonitionContent_S0QG";const p={note:{infimaClassName:"secondary",iconComponent:function(){return a.createElement("svg",{viewBox:"0 0 14 16"},a.createElement("path",{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))},label:a.createElement(o.Z,{id:"theme.admonition.note",description:"The default label used for the Note admonition (:::note)"},"note")},tip:{infimaClassName:"success",iconComponent:function(){return a.createElement("svg",{viewBox:"0 0 12 16"},a.createElement("path",{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))},label:a.createElement(o.Z,{id:"theme.admonition.tip",description:"The default label used for the Tip admonition (:::tip)"},"tip")},danger:{infimaClassName:"danger",iconComponent:function(){return a.createElement("svg",{viewBox:"0 0 12 16"},a.createElement("path",{fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))},label:a.createElement(o.Z,{id:"theme.admonition.danger",description:"The default label used for the Danger admonition (:::danger)"},"danger")},info:{infimaClassName:"info",iconComponent:function(){return a.createElement("svg",{viewBox:"0 0 14 16"},a.createElement("path",{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))},label:a.createElement(o.Z,{id:"theme.admonition.info",description:"The default label used for the Info admonition (:::info)"},"info")},caution:{infimaClassName:"warning",iconComponent:function(){return a.createElement("svg",{viewBox:"0 0 16 16"},a.createElement("path",{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))},label:a.createElement(o.Z,{id:"theme.admonition.caution",description:"The default label used for the Caution admonition (:::caution)"},"caution")}},d={secondary:"note",important:"info",success:"tip",warning:"danger"};function m(e){const{mdxAdmonitionTitle:t,rest:n}=function(e){const t=a.Children.toArray(e),n=t.find((e=>{var t;return a.isValidElement(e)&&"mdxAdmonitionTitle"===(null==(t=e.props)?void 0:t.mdxType)})),r=a.createElement(a.Fragment,null,t.filter((e=>e!==n)));return{mdxAdmonitionTitle:n,rest:r}}(e.children);return{...e,title:e.title??t,children:n}}function h(e){const{children:t,type:n,title:o,icon:h}=m(e),f=function(e){const t=d[e]??e;return p[t]||(console.warn(`No admonition config found for admonition type "${t}". Using Info as fallback.`),p.info)}(n),k=o??f.label,{iconComponent:b}=f,g=h??a.createElement(b,null);return a.createElement("div",{className:(0,r.Z)(s.k.common.admonition,s.k.common.admonitionType(e.type),"alert",`alert--${f.infimaClassName}`,i)},a.createElement("div",{className:l},a.createElement("span",{className:c},g),k),a.createElement("div",{className:u},t))}},89404:(e,t,n)=>{n.r(t),n.d(t,{ExecutorInfo:()=>p,assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var a=n(87462),r=(n(67294),n(3905)),s=n(23612);const o={},i="Tracetest",l={unversionedId:"test-types/executor-tracetest",id:"test-types/executor-tracetest",title:"Tracetest",description:"Testkube supports running trace-based tests with Tracetest.",source:"@site/docs/test-types/executor-tracetest.md",sourceDirName:"test-types",slug:"/test-types/executor-tracetest",permalink:"/test-types/executor-tracetest",draft:!1,editUrl:"https://github.com/kubeshop/testkube/tree/develop/docs/docs/test-types/executor-tracetest.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"SoapUI",permalink:"/test-types/executor-soapui"},next:{title:"OWASP Zed Attack Proxy Executor",permalink:"/test-types/executor-zap"}},c={},u=[{value:"<strong>Running a Tracetest Test</strong>",id:"running-a-tracetest-test",level:2},{value:"<strong>Add Test to Testkube</strong>",id:"add-test-to-testkube",level:3},{value:"<strong>Running Tracetest Tests in Testkube</strong>",id:"running-tracetest-tests-in-testkube",level:3},{value:"<strong>Getting Test Results</strong>",id:"getting-test-results",level:3},{value:"<strong>References</strong>",id:"references",level:2}],p=()=>(0,r.kt)("div",null,(0,r.kt)(s.Z,{type:"info",icon:"\ud83c\udf93",title:"What is Tracetest?",mdxType:"Admonition"},(0,r.kt)("ul",null,(0,r.kt)("li",null,(0,r.kt)("a",{href:"https://tracetest.io/"},"Tracetest")," is a OpenTelemetry based tool that helps you develop and test your distributed applications. It assists you in the development process by enabling you to trigger your code and see the trace as you add OTel instrumentation.")),(0,r.kt)("b",null,"What can I do with Tracetest?"),(0,r.kt)("ul",null,(0,r.kt)("li",null,"Tracetest uses your existing OpenTelemetry traces to power trace-based testing with assertions against your trace data at every point of the request transaction.")))),d={toc:u,ExecutorInfo:p};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"tracetest"},"Tracetest"),(0,r.kt)("p",null,"Testkube supports running trace-based tests with Tracetest."),(0,r.kt)("iframe",{width:"100%",height:"250",src:"https://www.youtube.com/embed/nAp3zYgykok",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",allowfullscreen:!0}),(0,r.kt)(p,{mdxType:"ExecutorInfo"}),(0,r.kt)("p",null,"By using the Testkube Tracetest Executor you can now add Tracetest to the native CI/CD pipeline in your Kubernetes cluster. This allows you to add all the additional Testkube functionalities, like running scheduled test runs and using Test Triggers. All while following the trace-based testing principle and enabling full in-depth assertions against trace data, not just the response."),(0,r.kt)("h2",{id:"running-a-tracetest-test"},(0,r.kt)("strong",{parentName:"h2"},"Running a Tracetest Test")),(0,r.kt)("p",null,"In order to run Tracetest tests using Testkube, you will need to have the following in your Kubernetes cluster:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Testkube"),(0,r.kt)("li",{parentName:"ol"},"Tracetest"),(0,r.kt)("li",{parentName:"ol"},"An OpenTelemetry Instrumented Service")),(0,r.kt)("p",null,"To install Tracetest, refer to\n",(0,r.kt)("a",{parentName:"p",href:"https://docs.tracetest.io/getting-started/installation/"},"Tracetest's documentation"),". "),(0,r.kt)("p",null,"To create the test in Testkube, you'll need to export your Tracetest ",(0,r.kt)("inlineCode",{parentName:"p"},"Test Definition"),". An example of an exported Tracetest definition looks like the following:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'type: Test\nspec:\n  id: RUkKQ_aVR\n  name: Pokeshop - List\n  description: Get a Pokemon\n  trigger:\n    type: http\n    httpRequest:\n      url: http://demo-pokemon-api.demo/pokemon?take=20&skip=0\n      method: GET\n      headers:\n      - key: Content-Type\n        value: application/json\n  specs:\n  - name: Database queries less than 500 ms\n    selector: span[tracetest.span.type="database"]\n    assertions:\n    - attr:tracetest.span.duration  <  500ms\n')),(0,r.kt)("h3",{id:"add-test-to-testkube"},(0,r.kt)("strong",{parentName:"h3"},"Add Test to Testkube")),(0,r.kt)("p",null,"To add your Tracetest tests to Testkube, use the ",(0,r.kt)("inlineCode",{parentName:"p"},"create test")," command. You'll need to reference the ",(0,r.kt)("inlineCode",{parentName:"p"},".yaml")," file for your test definitions using the ",(0,r.kt)("inlineCode",{parentName:"p"},"--file")," argument and the Tracetest Server endpoint using the ",(0,r.kt)("inlineCode",{parentName:"p"},"--variable")," argument with ",(0,r.kt)("inlineCode",{parentName:"p"},"TRACETEST_ENDPOINT"),"."),(0,r.kt)("p",null,"Your Tracetest Endpoint should be reachable by Testkube in your cluster. Use your Tracetest service's ",(0,r.kt)("inlineCode",{parentName:"p"},"CLUSTER-IP:PORT"),", for example: ",(0,r.kt)("inlineCode",{parentName:"p"},"10.96.93.106:11633"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'kubectl testkube create test --file ./test.yaml --type "tracetest/test" --name tracetest-test --variable TRACETEST_ENDPOINT=http://CLUSTER-IP:PORT\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh",metastring:'title="Expected output:"',title:'"Expected','output:"':!0},"Test created testkube / tracetest-test \ud83e\udd47\n")),(0,r.kt)("h3",{id:"running-tracetest-tests-in-testkube"},(0,r.kt)("strong",{parentName:"h3"},"Running Tracetest Tests in Testkube")),(0,r.kt)("p",null,"To execute the test, run the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl testkube run test --watch tracetest-test\n")),(0,r.kt)("p",null,"Alternatively, you can also run the test from the Testkube Dashboard."),(0,r.kt)("h3",{id:"getting-test-results"},(0,r.kt)("strong",{parentName:"h3"},"Getting Test Results")),(0,r.kt)("p",null,"If the test passes, the Testkube CLI will look like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh",metastring:'title="Expected output:"',title:'"Expected','output:"':!0},"Type:              tracetest/test\nName:              tracetest-test\nExecution ID:      6418873d9922b3e1003dd5b8\nExecution name:    tracetest-test-4\nExecution number:  4\nStatus:            running\nStart time:        2023-03-20 16:18:05.60245717 +0000 UTC\nEnd time:          0001-01-01 00:00:00 +0000 UTC\nDuration:\n\n  Variables:    1\n  - TRACETEST_ENDPOINT = http://10.96.93.106:11633\n\n\nGetting logs from test job 6418873d9922b3e1003dd5b8\nExecution completed\n\ud83d\udd2c Executing in directory :\n $ tracetest test run --server-url http://10.96.93.106:11633 --definition /tmp/test-content1901459587 --wait-for-result --output pretty\n\u2714 Pokeshop - List (http://10.96.93.106:11633/test/RUkKQ_aVR/run/3/test)\n    \u2714 Database queries less than 500 ms\n\n\u2705 Execution succeeded\nExecution completed \u2714 Pokeshop - List (http://10.96.93.106:11633/test/RUkKQ_aVR/run/3/test)\n    \u2714 Database queries less than 500 ms\n")),(0,r.kt)("p",null,"Alternatively, if it fails:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh",metastring:'title="Expected output:"',title:'"Expected','output:"':!0},"Type:              tracetest/test\nName:              tracetest-test\nExecution ID:      641885f39922b3e1003dd5b6\nExecution name:    tracetest-test-3\nExecution number:  3\nStatus:            running\nStart time:        2023-03-20 16:12:35.268197087 +0000 UTC\nEnd time:          0001-01-01 00:00:00 +0000 UTC\nDuration:\n\n  Variables:    1\n  - TRACETEST_ENDPOINT = http://10.96.93.106:11633\n\nGetting logs from test job 641885f39922b3e1003dd5b6\nExecution completed\n\ud83d\udd2c Executing in directory :\n $ tracetest test run --server-url http://10.96.93.106:11633 --definition /tmp/test-content737616681 --wait-for-result --output pretty\n\u2718 Pokeshop - List (http://10.96.93.106:11633/test/RUkKQ_aVR/run/2/test)\n    \u2718 Database queries less than 500 ms\n        \u2718 #2b213392d0e3ff21\n            \u2718 attr:tracetest.span.duration  <  500ms (502ms) (http://10.96.93.106:11633/test/RUkKQ_aVR/run/2/test?selectedAssertion=0&selectedSpan=2b213392d0e3ff21)\n        \u2714 #7e6657f6a43fceeb\n            \u2714 attr:tracetest.span.duration  <  500ms (72ms)\n        \u2714 #6ee2fb69690eed47\n            \u2714 attr:tracetest.span.duration  <  500ms (13ms)\n        \u2718 #a82c304a3558763b\n            \u2718 attr:tracetest.span.duration  <  500ms (679ms) (http://10.96.93.106:11633/test/RUkKQ_aVR/run/2/test?selectedAssertion=0&selectedSpan=a82c304a3558763b)\n        \u2714 #6ae21f2251101fd6\n            \u2714 attr:tracetest.span.duration  <  500ms (393ms)\n        \u2714 #2a9b9422af8ba1a8\n            \u2714 attr:tracetest.span.duration  <  500ms (61ms)\n        \u2714 #010a8a0d53687276\n            \u2714 attr:tracetest.span.duration  <  500ms (36ms)\n        \u2718 #895d66286b6325ae\n            \u2718 attr:tracetest.span.duration  <  500ms (686ms) (http://10.96.93.106:11633/test/RUkKQ_aVR/run/2/test?selectedAssertion=0&selectedSpan=895d66286b6325ae)\n")),(0,r.kt)("h2",{id:"references"},(0,r.kt)("strong",{parentName:"h2"},"References")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.tracetest.io/"},"Tracetest Documentation")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/kubeshop/testkube-executor-tracetest"},"Testkube Tracetest Executor - GitHub Repo")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.tracetest.io/examples-tutorials/recipes/running-tracetest-with-testkube/"},"Blog: Running Scheduled Trace-based Tests with Tracetest and Testkube"))))}m.isMDXComponent=!0}}]);