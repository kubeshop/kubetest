"use strict";(self.webpackChunktestkube_documentation=self.webpackChunktestkube_documentation||[]).push([[4740],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var r=n(67294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,a=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=u(n),h=s,m=d["".concat(l,".").concat(h)]||d[h]||c[h]||a;return n?r.createElement(m,o(o({ref:t},p),{},{components:n})):r.createElement(m,o({ref:t},p))}));function h(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var a=n.length,o=new Array(a);o[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:s,o[1]=i;for(var u=2;u<a;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5990:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>i,toc:()=>u});var r=n(87462),s=(n(67294),n(3905));const a={},o="Exposing Testkube Dashboard with NGINX Ingress",i={unversionedId:"articles/exposing-testkube-with-ingress-nginx",id:"articles/exposing-testkube-with-ingress-nginx",title:"Exposing Testkube Dashboard with NGINX Ingress",description:"Usually, you would want to share the Testkube Dashboard with your internal company VPN to allow access to other team members without having to provide them access to your Kubernetes cluster. This is achieved by exposing the Testkube Dashboard.",source:"@site/docs/articles/exposing-testkube-with-ingress-nginx.md",sourceDirName:"articles",slug:"/articles/exposing-testkube-with-ingress-nginx",permalink:"/articles/exposing-testkube-with-ingress-nginx",draft:!1,editUrl:"https://github.com/kubeshop/testkube/tree/develop/docs/docs/articles/exposing-testkube-with-ingress-nginx.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"OAuth for Testkube Dashboard",permalink:"/articles/oauth-dashboard"},next:{title:"Guide to Deploying Testkube on AWS",permalink:"/articles/deploying-in-aws"}},l={},u=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Exposing Testkube",id:"exposing-testkube",level:2},{value:"Deployment",id:"deployment",level:2}],p={toc:u};function c(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"exposing-testkube-dashboard-with-nginx-ingress"},"Exposing Testkube Dashboard with NGINX Ingress"),(0,s.kt)("p",null,"Usually, you would want to share the Testkube Dashboard with your internal company VPN to allow access to other team members without having to provide them access to your Kubernetes cluster. This is achieved by exposing the Testkube Dashboard. "),(0,s.kt)("p",null,"In this section we cover multiple solutions for different cloud providers."),(0,s.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"Deploy NGINX Ingress Controller into your k8s cluster. Please see the link for more details: ",(0,s.kt)("a",{parentName:"p",href:"https://kubernetes.github.io/ingress-nginx/"},"NGINX Ingress Controller"),".")),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"(Optional) To use TLS, the installation of any certificate management tool is required. At Testkube and in this guide we will use ",(0,s.kt)("a",{parentName:"p",href:"https://cert-manager.io/"},"cert-manager"),", but it might differ depending on your set-up.")),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"Add the Testkube helm-chart to your repositories, using this command:"))),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"helm repo add kubeshop https://kubeshop.github.io/helm-charts && helm repo update\n")),(0,s.kt)("h2",{id:"exposing-testkube"},"Exposing Testkube"),(0,s.kt)("p",null,"In order to expose Testkube to the outside world we need to enable two Ingresses - Testkube's UI API and Testkube's dashboard. Update the ",(0,s.kt)("inlineCode",{parentName:"p"},"values.yaml")," file that will later be passed to the ",(0,s.kt)("inlineCode",{parentName:"p"},"helm install")," command. To enable the Testkube Ingresses, please use the following code configuration:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-aidl"},'testkube-api:\n  uiIngress:\n    enabled: true\n    annotations:\n      kubernetes.io/ingress.class: nginx\n      nginx.ingress.kubernetes.io/force-ssl-redirect: "false"\n      nginx.ingress.kubernetes.io/ssl-redirect: "false"\n      nginx.ingress.kubernetes.io/rewrite-target: /$1\n      cert-manager.io/cluster-issuer: letsencrypt-prod\n      acme.cert-manager.io/http01-edit-in-place: "true"\n    path: /results/(v\\d/.*)\n    hosts:\n      - your-host.com\n    tlsenabled: "true"\n    tls:\n      - hosts:\n          - your-host.com\n        secretName: testkube-cert-secret\n\n\ntestkube-dashboard:\n  ingress:\n    enabled: "true"\n    annotations:\n      kubernetes.io/ingress.class: nginx\n      nginx.ingress.kubernetes.io/force-ssl-redirect: "false"\n      nginx.ingress.kubernetes.io/ssl-redirect: "false"\n      cert-manager.io/cluster-issuer: letsencrypt-prod\n      acme.cert-manager.io/http01-edit-in-place: "true"\n    path: /\n    hosts:\n      - your-host.com\n    tlsenabled: "true"\n    tls:\n      - hosts:\n          - your-host.com\n        secretName: testkube-cert-secret\n\n  apiServerEndpoint: "your-host.com/results"\n')),(0,s.kt)("admonition",{type:"note"},(0,s.kt)("p",{parentName:"admonition"},"Keep in mind that hosts have to be identical for the ",(0,s.kt)("inlineCode",{parentName:"p"},"dashboard")," and for the ",(0,s.kt)("inlineCode",{parentName:"p"},"api")," with different paths."),(0,s.kt)("p",{parentName:"admonition"},"Also, do not forget to add ",(0,s.kt)("inlineCode",{parentName:"p"},"apiServerEndpoint")," to the ",(0,s.kt)("inlineCode",{parentName:"p"},"values.yaml")," for the ",(0,s.kt)("inlineCode",{parentName:"p"},"testkube-dashboard"),', e.g.: apiServerEndpoint: "your-host.com/results".')),(0,s.kt)("p",null,"Please note that the snippet includes annotations for cert manager as well. Certificates are automatically generated using Let's Encrypt and cert-manager, but can be configured for any particular case. If there is no need for a TLS (Transport Layer Security) to be enabled, omit the TLS configuration."),(0,s.kt)("admonition",{type:"important"},(0,s.kt)("p",{parentName:"admonition"},"We highly discourage working in a non-safe environment which is exposed without the use of a TLS-based connection. Please do so in a private internal environment for testing or development purposes only.")),(0,s.kt)("h2",{id:"deployment"},"Deployment"),(0,s.kt)("p",null,"Once the ",(0,s.kt)("inlineCode",{parentName:"p"},"values.yaml")," file is ready, we can deploy Testkube into a cluster:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-aidl"},"helm install --create-namespace testkube kubeshop/testkube --namespace testkube --values values.yaml\n")),(0,s.kt)("p",null,"After the installation is complete, discover the address of the Ingresses with the following commands:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"kubectl get ingress -n testkube\n")),(0,s.kt)("p",null,"By default, the API's entry point is the path ",(0,s.kt)("inlineCode",{parentName:"p"},"/results"),", so the results will be accessible at ",(0,s.kt)("inlineCode",{parentName:"p"},"$INGRESS_HOST/results/")),(0,s.kt)("p",null,"The Ingress configuration used is available in the ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/kubeshop/helm-charts"},"Testkube Helm Repo"),"."),(0,s.kt)("p",null,"A values file for guidance can be found ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/kubeshop/helm-charts/blob/main/charts/testkube/values-demo.yaml#L334"},"here"),"."))}c.isMDXComponent=!0}}]);