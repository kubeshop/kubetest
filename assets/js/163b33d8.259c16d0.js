"use strict";(self.webpackChunktestkube_documentation=self.webpackChunktestkube_documentation||[]).push([[9921],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=l(n),m=o,f=d["".concat(s,".").concat(m)]||d[m]||p[m]||i;return n?r.createElement(f,a(a({ref:t},u),{},{components:n})):r.createElement(f,a({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var l=2;l<i;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},82868:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var r=n(87462),o=(n(67294),n(3905));const i={},a=void 0,c={unversionedId:"cli/testkube_pro_disconnect",id:"cli/testkube_pro_disconnect",title:"testkube_pro_disconnect",description:"testkube pro disconnect",source:"@site/docs/cli/testkube_pro_disconnect.md",sourceDirName:"cli",slug:"/cli/testkube_pro_disconnect",permalink:"/cli/testkube_pro_disconnect",draft:!1,editUrl:"https://github.com/kubeshop/testkube/tree/develop/docs/docs/cli/testkube_pro_disconnect.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"testkube_pro_connect",permalink:"/cli/testkube_pro_connect"},next:{title:"testkube_pro_init",permalink:"/cli/testkube_pro_init"}},s={},l=[{value:"testkube pro disconnect",id:"testkube-pro-disconnect",level:2},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}],u={toc:l};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"testkube-pro-disconnect"},"testkube pro disconnect"),(0,o.kt)("p",null,"Switch back to Testkube OSS mode, based on active .kube/config file"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"testkube pro disconnect [flags]\n")),(0,o.kt)("h3",{id:"options"},"Options"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"      --chart string             chart name (usually you don't need to change it) (default \"kubeshop/testkube\")\n      --dashboard-replicas int   Dashboard replicas (default 1)\n      --dry-run                  dry run mode - only print commands that would be executed\n  -h, --help                     help for disconnect\n      --minio-replicas int       MinIO replicas (default 1)\n      --mongo-replicas int       MongoDB replicas (default 1)\n      --name string              installation name (usually you don't need to change it) (default \"testkube\")\n      --namespace string         namespace where to install (default \"testkube\")\n      --no-confirm               don't ask for confirmation - unatended installation mode\n      --no-dashboard             don't install dashboard\n      --no-minio                 don't install MinIO\n      --no-mongo                 don't install MongoDB\n      --values string            path to Helm values file\n")),(0,o.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'  -a, --api-uri string   api uri, default value read from config if set (default "https://demo.testkube.io/results")\n  -c, --client string    client used for connecting to Testkube API one of proxy|direct (default "proxy")\n      --insecure         insecure connection for direct client\n      --oauth-enabled    enable oauth\n      --verbose          show additional debug messages\n')),(0,o.kt)("h3",{id:"see-also"},"SEE ALSO"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/cli/testkube_pro"},"testkube pro"),"\t - Testkube Pro commands")))}p.isMDXComponent=!0}}]);