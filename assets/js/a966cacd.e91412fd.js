"use strict";(self.webpackChunktestkube_documentation=self.webpackChunktestkube_documentation||[]).push([[4810],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),u=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=u(n),d=o,h=m["".concat(l,".").concat(d)]||m[d]||p[d]||r;return n?a.createElement(h,i(i({ref:t},c),{},{components:n})):a.createElement(h,i({ref:t},c))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var u=2;u<r;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},69014:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>u});var a=n(87462),o=(n(67294),n(3905));const r={},i="Common Issues",s={unversionedId:"articles/common-issues",id:"articles/common-issues",title:"Common Issues",description:"How do I expose Testkube to the Internet?",source:"@site/docs/articles/common-issues.md",sourceDirName:"articles",slug:"/articles/common-issues",permalink:"/articles/common-issues",draft:!1,editUrl:"https://github.com/kubeshop/testkube/tree/develop/docs/docs/articles/common-issues.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Telemetry",permalink:"/articles/telemetry"},next:{title:"Deprecations",permalink:"/articles/deprecations"}},l={},u=[{value:"How do I expose Testkube to the Internet?",id:"how-do-i-expose-testkube-to-the-internet",level:2},{value:"Access the Service Under Test (SUT) Using Testkube",id:"access-the-service-under-test-sut-using-testkube",level:2},{value:"If You&#39;re Still Having Issues",id:"if-youre-still-having-issues",level:2},{value:"Other Installation Methods",id:"other-installation-methods",level:2},{value:"Installation on OpenShift Deployed on GCP",id:"installation-on-openshift-deployed-on-gcp",level:3},{value:"Installation with S3 Storage and IAM Authentication",id:"installation-with-s3-storage-and-iam-authentication",level:3},{value:"Observability",id:"observability",level:2}],c={toc:u};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"common-issues"},"Common Issues"),(0,o.kt)("h2",{id:"how-do-i-expose-testkube-to-the-internet"},"How do I expose Testkube to the Internet?"),(0,o.kt)("p",null,"To expose Testkube to the Internet, you will need to create an Ingress for both the Testkube API and the Testkube dashboard."),(0,o.kt)("p",null,"Check the guides ",(0,o.kt)("a",{parentName:"p",href:"/articles/going-to-production"},"here")," for different configurations."),(0,o.kt)("h2",{id:"access-the-service-under-test-sut-using-testkube"},"Access the Service Under Test (SUT) Using Testkube"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Services inside the same Kubernetes cluster can be accessed using the address ",(0,o.kt)("inlineCode",{parentName:"li"},"\\<service-name\\>.\\<service-namespace\\>.svc.cluster.local:\\<port-number\\>"),". If there are network restrictions configured, Testkube will need permissions to access the SUT over the local network of the cluster."),(0,o.kt)("li",{parentName:"ul"},"If Testkube and the SUT are not in the same cluster, SUT will have to be exposed to Testkube using an Ingress or a Load Balancer.")),(0,o.kt)("h2",{id:"if-youre-still-having-issues"},"If You're Still Having Issues"),(0,o.kt)("p",null,"If these guides do not solve the issue that you encountered or you have other questions or comments, please contact us on ",(0,o.kt)("a",{parentName:"p",href:"https://testkubeworkspace.slack.com/join/shared_invite/zt-2arhz5vmu-U2r3WZ69iPya5Fw0hMhRDg#/shared-invite/email"},"Slack"),"."),(0,o.kt)("h2",{id:"other-installation-methods"},"Other Installation Methods"),(0,o.kt)("h3",{id:"installation-on-openshift-deployed-on-gcp"},"Installation on OpenShift Deployed on GCP"),(0,o.kt)("p",null,"To install Testkube you need an empty OpenShift cluster. Once the cluster is up and running update ",(0,o.kt)("inlineCode",{parentName:"p"},"values.yaml")," file, including the configuration below."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Add security context for MongoDB to ",(0,o.kt)("inlineCode",{parentName:"li"},"values.yaml"),":")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"mongodb:\n  securityContext:\n    enabled: true\n    fsGroup: 1000650001\n    runAsUser: 1000650001\n  podSecurityContext:\n    enabled: false\n  containerSecurityContext:\n    enabled: true\n    runAsUser: 1000650001\n    runAsNonRoot: true\n  volumePermissions:\n    enabled: false\n  auth:\n    enabled: false\n")),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"Add security context for ",(0,o.kt)("inlineCode",{parentName:"li"},"Patch")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"Migrate")," jobs that are a part of Testkube Operator configuration to ",(0,o.kt)("inlineCode",{parentName:"li"},"values.yaml"),":")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'testkube-operator:\n  webhook:\n    migrate:\n      enabled: true\n      securityContext:\n        allowPrivilegeEscalation: false\n        capabilities:\n          drop: ["ALL"]\n\n    patch:\n      enabled: true\n      securityContext:\n        runAsNonRoot: true\n        runAsUser: 1000650000\n        fsGroup: 1000650000\n')),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},"Install Testkube specifying the path to the new ",(0,o.kt)("inlineCode",{parentName:"li"},"values.yaml")," file")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"helm install testkube kubeshop/testkube --create-namespace --namespace testkube --values values.yaml\n")),(0,o.kt)("p",null,"Please notice that since we've just installed MongoDB with a ",(0,o.kt)("inlineCode",{parentName:"p"},"testkube-mongodb")," Helm release name, you are not required to reconfigure the Testkube API MongoDB connection URI. If you've installed with a different name/namespace, please adjust ",(0,o.kt)("inlineCode",{parentName:"p"},'--set testkube-api.mongodb.dsn: "mongodb://testkube-mongodb:27017"')," to your MongoDB service."),(0,o.kt)("h3",{id:"installation-with-s3-storage-and-iam-authentication"},"Installation with S3 Storage and IAM Authentication"),(0,o.kt)("p",null,"To use S3 as storage, the steps are as follows:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Configure IAM role with the following permissions:"),(0,o.kt)("p",{parentName:"li"},"s3:DeleteObject\ns3:GetObject\ns3:ListBucket\ns3:PutObject"))),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"Create a ServiceAccount with the ARN specified.\ne.g.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  annotations:\n    eks.amazonaws.com/role-arn: arn:aws:iam::265500248336:role/minio-example\n  name: s3-access\n  namespace: testkube\n")),(0,o.kt)("p",null,"In the Helm values.yaml file:\n3. Add the ARN annotation from above to ",(0,o.kt)("inlineCode",{parentName:"p"},"testkube-api.serviceAccount.annotations"),".\n4. Link the ServiceAccount to the ",(0,o.kt)("inlineCode",{parentName:"p"},"testkube-api.minio.serviceAccountName")," and to ",(0,o.kt)("inlineCode",{parentName:"p"},"testkube-api.jobServiceAccountName"),".\n5. Leave ",(0,o.kt)("inlineCode",{parentName:"p"},"minio.minioRootUser"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"minio.minioRootPassword")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"storage.port")," empty.\n6. Set ",(0,o.kt)("inlineCode",{parentName:"p"},"storage.endpoint")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"s3.amazonaws.com"),"."),(0,o.kt)("ol",{start:7},(0,o.kt)("li",{parentName:"ol"},"Install using Helm and the values file with the above modifications.")),(0,o.kt)("h2",{id:"observability"},"Observability"),(0,o.kt)("p",null,"There are two types of storage Mongo and Minio, read more details ",(0,o.kt)("a",{parentName:"p",href:"/articles/logging"},"here"),"."))}p.isMDXComponent=!0}}]);