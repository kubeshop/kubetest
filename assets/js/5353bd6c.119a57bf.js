"use strict";(self.webpackChunktestkube_documentation=self.webpackChunktestkube_documentation||[]).push([[1264],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>f});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,d=u(e,["components","mdxType","originalType","parentName"]),p=s(n),f=o,m=p["".concat(l,".").concat(f)]||p[f]||c[f]||a;return n?r.createElement(m,i(i({ref:t},d),{},{components:n})):r.createElement(m,i({ref:t},d))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=p;var u={};for(var l in t)hasOwnProperty.call(t,l)&&(u[l]=t[l]);u.originalType=e,u.mdxType="string"==typeof e?e:o,i[1]=u;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},78514:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>u,toc:()=>s});var r=n(87462),o=(n(67294),n(3905));const a={},i=void 0,u={unversionedId:"cli/testkube_upgrade",id:"cli/testkube_upgrade",title:"testkube_upgrade",description:"testkube upgrade",source:"@site/docs/cli/testkube_upgrade.md",sourceDirName:"cli",slug:"/cli/testkube_upgrade",permalink:"/cli/testkube_upgrade",draft:!1,editUrl:"https://github.com/kubeshop/testkube/tree/develop/docs/docs/cli/testkube_upgrade.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"testkube_update_webhook",permalink:"/cli/testkube_update_webhook"},next:{title:"testkube_version",permalink:"/cli/testkube_version"}},l={},s=[{value:"testkube upgrade",id:"testkube-upgrade",level:2},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}],d={toc:s};function c(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"testkube-upgrade"},"testkube upgrade"),(0,o.kt)("p",null,"Upgrade Helm chart, install dependencies and run migrations"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"testkube upgrade [flags]\n")),(0,o.kt)("h3",{id:"options"},"Options"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'      --agent-prefix string   usually don\'t need to be changed [required for custom cloud mode] (default "agent")\n      --agent-token string    Testkube Pro agent key [required for centralized mode]\n      --agent-uri string      Testkube Pro agent URI [required for centralized mode]\n      --api-prefix string     usually don\'t need to be changed [required for custom cloud mode] (default "api")\n      --chart string          chart name (usually you don\'t need to change it) (default "kubeshop/testkube")\n      --dry-run               dry run mode - only print commands that would be executed\n      --env-id string         Testkube Pro environment id [required for centralized mode]\n      --feature-logs-v2       Logs v2 feature flag\n  -h, --help                  help for upgrade\n      --logs-prefix string    usually don\'t need to be changed [required for custom cloud mode] (default "logs")\n      --logs-uri string       Testkube Pro logs URI [required for centralized mode]\n      --master-insecure       should client connect in insecure mode (will use http instead of https)\n      --name string           installation name (usually you don\'t need to change it) (default "testkube")\n      --namespace string      namespace where to install (default "testkube")\n      --no-confirm            don\'t ask for confirmation - unatended installation mode\n      --no-minio              don\'t install MinIO\n      --no-mongo              don\'t install MongoDB\n      --org-id string         Testkube Pro organization id [required for centralized mode]\n      --root-domain string    usually don\'t need to be changed [required for custom cloud mode] (default "testkube.io")\n      --ui-prefix string      usually don\'t need to be changed [required for custom cloud mode] (default "app")\n      --values string         path to Helm values file\n')),(0,o.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'  -a, --api-uri string          api uri, default value read from config if set (default "http://localhost:8088")\n  -c, --client string           client used for connecting to Testkube API one of proxy|direct|cluster (default "proxy")\n      --header stringToString   headers for direct client key value pair: --header name=value (default [])\n      --insecure                insecure connection for direct client\n      --oauth-enabled           enable oauth\n      --verbose                 show additional debug messages\n')),(0,o.kt)("h3",{id:"see-also"},"SEE ALSO"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/cli/testkube"},"testkube"),"\t - Testkube entrypoint for kubectl plugin")))}c.isMDXComponent=!0}}]);