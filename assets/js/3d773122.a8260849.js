"use strict";(self.webpackChunktestkube_documentation=self.webpackChunktestkube_documentation||[]).push([[6397],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var s=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,s)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,s,o=function(e,t){if(null==e)return{};var n,s,o={},a=Object.keys(e);for(s=0;s<a.length;s++)n=a[s],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(s=0;s<a.length;s++)n=a[s],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=s.createContext({}),l=function(e){var t=s.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=l(e.components);return s.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},k=s.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),k=l(n),d=o,m=k["".concat(u,".").concat(d)]||k[d]||p[d]||a;return n?s.createElement(m,r(r({ref:t},c),{},{components:n})):s.createElement(m,r({ref:t},c))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,r=new Array(a);r[0]=k;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:o,r[1]=i;for(var l=2;l<a;l++)r[l]=n[l];return s.createElement.apply(null,r)}return s.createElement.apply(null,n)}k.displayName="MDXCreateElement"},47559:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>r,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var s=n(87462),o=(n(67294),n(3905));const a={},r="Testkube Azure DevOps Pipelines",i={unversionedId:"articles/azure",id:"articles/azure",title:"Testkube Azure DevOps Pipelines",description:"Testkube's integration with Azure DevOps streamlines the installation of Testkube, enabling the execution of any Testkube CLI command within Azure DevOps pipelines. This integration can be effortlessly integrated into your Azure DevOps setup, enhancing your continuous integration and delivery processes.",source:"@site/docs/articles/azure.md",sourceDirName:"articles",slug:"/articles/azure",permalink:"/articles/azure",draft:!1,editUrl:"https://github.com/kubeshop/testkube/tree/develop/docs/docs/articles/azure.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Testkube Jenkins UI",permalink:"/articles/jenkins-ui"},next:{title:"Testkube CircleCI",permalink:"/articles/circleci"}},u={},l=[{value:"Azure DevOps Extension",id:"azure-devops-extension",level:3},{value:"Troubleshooting",id:"troubleshooting",level:4},{value:"Testkube Pro",id:"testkube-pro",level:2},{value:"How to configure Testkube CLI action for Testkube Pro and run a test",id:"how-to-configure-testkube-cli-action-for-testkube-pro-and-run-a-test",level:3},{value:"Testkube OSS",id:"testkube-oss",level:2},{value:"How to configure the Testkube CLI action for TK OSS and run a test",id:"how-to-configure-the-testkube-cli-action-for-tk-oss-and-run-a-test",level:3},{value:"How to configure Testkube CLI action for TK OSS and run a test",id:"how-to-configure-testkube-cli-action-for-tk-oss-and-run-a-test",level:3},{value:"How to connect to GKE (Google Kubernetes Engine) cluster and run a test",id:"how-to-connect-to-gke-google-kubernetes-engine-cluster-and-run-a-test",level:3}],c={toc:l};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,s.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"testkube-azure-devops-pipelines"},"Testkube Azure DevOps Pipelines"),(0,o.kt)("p",null,"Testkube's integration with Azure DevOps streamlines the installation of Testkube, enabling the execution of any ",(0,o.kt)("a",{parentName:"p",href:"https://docs.testkube.io/cli/testkube"},"Testkube CLI")," command within Azure DevOps pipelines. This integration can be effortlessly integrated into your Azure DevOps setup, enhancing your continuous integration and delivery processes.\nThe Azure DevOps integration offers a versatile solution for managing your pipeline workflows and is compatible with Testkube Pro, Testkube Pro On-Prem and the open-source Testkube platform. It allows Azure DevOps users to effectively utilize Testkube's capabilities within their CI/CD pipelines, providing a robust and flexible framework for test execution and automation."),(0,o.kt)("h3",{id:"azure-devops-extension"},"Azure DevOps Extension"),(0,o.kt)("p",null,"Install the Testkube CLI extension using the following url:\n",(0,o.kt)("a",{parentName:"p",href:"https://marketplace.visualstudio.com/items?itemName=Testkube.testkubecli"},"https://marketplace.visualstudio.com/items?itemName=Testkube.testkubecli")),(0,o.kt)("h4",{id:"troubleshooting"},"Troubleshooting"),(0,o.kt)("p",null,"For solutions to common issues, such as the ",(0,o.kt)("inlineCode",{parentName:"p"},"--git")," flags causing timeouts, please refer to our ",(0,o.kt)("a",{parentName:"p",href:"/articles/azure-troubleshooting"},"Troubleshooting article"),"."),(0,o.kt)("h2",{id:"testkube-pro"},"Testkube Pro"),(0,o.kt)("h3",{id:"how-to-configure-testkube-cli-action-for-testkube-pro-and-run-a-test"},"How to configure Testkube CLI action for Testkube Pro and run a test"),(0,o.kt)("p",null,"To use Azure DevOps Pipelines for ",(0,o.kt)("a",{parentName:"p",href:"https://app.testkube.io/"},"Testkube Pro"),", you need to create an ",(0,o.kt)("a",{parentName:"p",href:"https://docs.testkube.io/testkube-pro/articles/organization-management/#api-tokens"},"API token"),".\nThen, pass the ",(0,o.kt)("strong",{parentName:"p"},"organization")," and ",(0,o.kt)("strong",{parentName:"p"},"environment")," IDs, along with the ",(0,o.kt)("strong",{parentName:"p"},"token")," and other parameters specific for your use case."),(0,o.kt)("p",null,"If a test is already created, you can run it using the command ",(0,o.kt)("inlineCode",{parentName:"p"},"testkube run test test-name -f"),". However, if you need to create a test in this workflow, you need to add a creation command, e.g.: ",(0,o.kt)("inlineCode",{parentName:"p"},"testkube create test --name test-name --file path_to_file.json"),"."),(0,o.kt)("p",null,"You'll need to create a `azure-pipelines.yml`` file. This will include the stages, jobs and tasks necessary to execute the workflow"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"trigger:\n- main\n\npool:\n  vmImage: 'ubuntu-latest'\n\nstages:\n- stage: Test\n  jobs:\n  - job: RunTestkube\n    steps:\n      - task: SetupTestkube@1\n        inputs:\n          organization: '$(TK_ORG_ID)'\n          environment: '$(TK_ENV_ID)'\n          token: '$(TK_API_TOKEN)'\n      - script: testkube run test test-name -f\n        displayName: Run Testkube Test\n")),(0,o.kt)("h2",{id:"testkube-oss"},"Testkube OSS"),(0,o.kt)("h3",{id:"how-to-configure-the-testkube-cli-action-for-tk-oss-and-run-a-test"},"How to configure the Testkube CLI action for TK OSS and run a test"),(0,o.kt)("p",null,"To connect to the self-hosted instance, you need to have ",(0,o.kt)("strong",{parentName:"p"},"kubectl")," configured for accessing your Kubernetes cluster, and pass an optional namespace, if Testkube is not deployed in the default ",(0,o.kt)("strong",{parentName:"p"},"testkube")," namespace. "),(0,o.kt)("p",null,"If a test is already created, you can run it using the command ",(0,o.kt)("inlineCode",{parentName:"p"},"testkube run test test-name -f")," . However, if you need to create a test in this workflow, please add a creation command, e.g.: ",(0,o.kt)("inlineCode",{parentName:"p"},"testkube create test --name test-name --file path_to_file.json"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"trigger:\n- main\n\npool:\n  vmImage: 'ubuntu-latest'\n\nstages:\n- stage: Test\n  jobs:\n  - job: RunTestkube\n    steps:\n      - task: SetupTestkube@1\n        inputs:\n          namespace: 'custom-testkube-namespace'\n          url: 'custom-testkube-url'\n      - script: testkube run test test-name -f\n        displayName: 'Run Testkube Test'\n")),(0,o.kt)("p",null,"The steps to connect to your Kubernetes cluster differ for each provider. You should check the docs of your Cloud provider for how to connect to the Kubernetes cluster from Azure DevOps Pipelines"),(0,o.kt)("h3",{id:"how-to-configure-testkube-cli-action-for-tk-oss-and-run-a-test"},"How to configure Testkube CLI action for TK OSS and run a test"),(0,o.kt)("p",null,"This workflow establishes a connection to the EKS cluster and creates and runs a test using TK CLI. In this example we also use variables not\nto reveal sensitive data. Please make sure that the following points are satisfied:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"The ",(0,o.kt)("strong",{parentName:"li"},"AWS_ACCESS_KEY_ID"),", ",(0,o.kt)("strong",{parentName:"li"},"AWS_SECRET_ACCESS_KEY")," secrets should contain your AWS IAM keys with proper permissions to connect to the EKS cluster."),(0,o.kt)("li",{parentName:"ul"},"The ",(0,o.kt)("strong",{parentName:"li"},"AWS_REGION")," secret should contain the AWS region where EKS is."),(0,o.kt)("li",{parentName:"ul"},"Tke ",(0,o.kt)("strong",{parentName:"li"},"EKS_CLUSTER_NAME")," secret points to the name of the EKS cluster you want to connect.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"trigger:\n- main\n\npool:\n  vmImage: 'ubuntu-latest'\n\nstages:\n- stage: Test\n  jobs:\n  - job: SetupAndRunTestkube\n    steps:\n      - script: |\n          # Setting up AWS credentials\n          aws configure set aws_access_key_id $(AWS_ACCESS_KEY_ID)\n          aws configure set aws_secret_access_key $(AWS_SECRET_ACCESS_KEY)\n          aws configure set region $(AWS_REGION)\n\n          # Updating kubeconfig for EKS\n          aws eks update-kubeconfig --name $(EKS_CLUSTER_NAME) --region $(AWS_REGION)\n        displayName: 'Setup AWS and Testkube'\n\n      - task: SetupTestkube@1\n        inputs:\n          organization: '$(TK_ORG_ID)'\n          environment: '$(TK_ENV_ID)'\n          token: '$(TK_API_TOKEN)'\n\n      - script: testkube run test test-name -f\n        displayName: Run Testkube Test\n\n")),(0,o.kt)("h3",{id:"how-to-connect-to-gke-google-kubernetes-engine-cluster-and-run-a-test"},"How to connect to GKE (Google Kubernetes Engine) cluster and run a test"),(0,o.kt)("p",null,"This example connects to a k8s cluster in Google Cloud and creates and runs a test using Testkube Azure DevOps pipeline. Please make sure that the following points are satisfied:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"The ",(0,o.kt)("strong",{parentName:"li"},"GKE Sevice Account")," should have already been created in Google Cloud and added to pipeline variables along with ",(0,o.kt)("strong",{parentName:"li"},"GKE_PROJECT")," value."),(0,o.kt)("li",{parentName:"ul"},"The ",(0,o.kt)("strong",{parentName:"li"},"GKE_CLUSTER_NAME")," and ",(0,o.kt)("strong",{parentName:"li"},"GKE_ZONE")," can be added as environmental variables in the workflow.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"trigger:\n- main\n\npool:\n  vmImage: 'ubuntu-latest'\n\nstages:\n- stage: SetupGKE\n  jobs:\n  - job: SetupGCloudAndKubectl\n    steps:\n    - task: DownloadSecureFile@1\n      name: gkeServiceAccount\n      inputs:\n        secureFile: 'gke-service-account-key.json'\n    - task: GoogleCloudSdkInstaller@0\n      inputs:\n        version: 'latest'\n    - script: |\n        gcloud auth activate-service-account --key-file $(gkeServiceAccount.secureFilePath)\n        gcloud config set project $(GKE_PROJECT)\n        gcloud container clusters get-credentials $(GKE_CLUSTER_NAME) --zone $(GKE_ZONE)\n      displayName: 'Setup GKE'\n\n- stage: Test\n  dependsOn: SetupGKE\n  jobs:\n  - job: RunTestkube\n    steps:\n    - task: SetupTestkube@1\n      inputs:\n        organization: '$(TK_ORG_ID)'\n        environment: '$(TK_ENV_ID)'\n        token: '$(TK_API_TOKEN)'\n    - script: |\n        testkube run test test-name -f\n      displayName: 'Run Testkube Test'\n")))}p.isMDXComponent=!0}}]);