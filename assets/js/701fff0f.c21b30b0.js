"use strict";(self.webpackChunktestkube_documentation=self.webpackChunktestkube_documentation||[]).push([[1492],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var a=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var i=a.createContext({}),p=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,o=e.originalType,i=e.parentName,c=r(e,["components","mdxType","originalType","parentName"]),m=p(n),d=l,f=m["".concat(i,".").concat(d)]||m[d]||u[d]||o;return n?a.createElement(f,s(s({ref:t},c),{},{components:n})):a.createElement(f,s({ref:t},c))}));function d(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var o=n.length,s=new Array(o);s[0]=m;var r={};for(var i in t)hasOwnProperty.call(t,i)&&(r[i]=t[i]);r.originalType=e,r.mdxType="string"==typeof e?e:l,s[1]=r;for(var p=2;p<o;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},87079:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>p});var a=n(87462),l=(n(67294),n(3905));const o={},s="Test Workflows Examples - Templates",r={unversionedId:"articles/test-workflows-examples-templates",id:"articles/test-workflows-examples-templates",title:"Test Workflows Examples - Templates",description:"It\u2019s common to expose a snippet of configuration that could be reused across other TestWorkflows.",source:"@site/docs/articles/test-workflows-examples-templates.md",sourceDirName:"articles",slug:"/articles/test-workflows-examples-templates",permalink:"/articles/test-workflows-examples-templates",draft:!1,editUrl:"https://github.com/kubeshop/testkube/tree/develop/docs/docs/articles/test-workflows-examples-templates.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Test Workflows - Expressions",permalink:"/articles/test-workflows-expressions"},next:{title:"Test Workflows - Content",permalink:"/articles/test-workflows-content"}},i={},p=[{value:"TestWorkflowTemplate",id:"testworkflowtemplate",level:2},{value:"Syntax",id:"syntax",level:3},{value:"Multiple Inheritance",id:"multiple-inheritance",level:3},{value:"Configuration",id:"configuration",level:2},{value:"Usage",id:"usage",level:3},{value:"Isolation (Expansion)",id:"isolation-expansion",level:2},{value:"Top Level - Use",id:"top-level---use",level:3},{value:"Step Level - Use",id:"step-level---use",level:3},{value:"Step Level - Template",id:"step-level---template",level:3}],c={toc:p};function u(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"test-workflows-examples---templates"},"Test Workflows Examples - Templates"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"It\u2019s common to expose a snippet of configuration that could be reused across other TestWorkflows.")),(0,l.kt)("h2",{id:"testworkflowtemplate"},"TestWorkflowTemplate"),(0,l.kt)("h3",{id:"syntax"},"Syntax"),(0,l.kt)("p",null,"The templates have the same syntax as TestWorkflows, the only difference being that they can\u2019t inherit other templates."),(0,l.kt)("h3",{id:"multiple-inheritance"},"Multiple Inheritance"),(0,l.kt)("p",null,"Instead of the Executor approach, you may use multiple templates in a single TestWorkflow. Thanks to that, you can reuse each behavior separately. As an example, you may want to have template:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Provide a template for common Cypress usage."),(0,l.kt)("li",{parentName:"ul"},"Provide a template for closing Istio sidecar."),(0,l.kt)("li",{parentName:"ul"},"Provide a template to attach labels per company department."),(0,l.kt)("li",{parentName:"ul"},"Provide access to a data source.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: testworkflows.testkube.io/v1\nkind: TestWorkflowTemplate\nmetadata:\n  name: close-istio\nspec:\n  after:\n  - name: 'Close Istio sidecar'\n    condition: always\n    shell: 'touch /pod_control/job_finished'\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: testworkflows.testkube.io/v1\nkind: TestWorkflow\nmetadata:\n  name: overview--example-15\nspec:\n  use:\n  - name: 'close-istio'\n\n  steps:\n  - shell: 'tree /usr/bin'\n")),(0,l.kt)("h2",{id:"configuration"},"Configuration"),(0,l.kt)("p",null,"The templates may be configured the same way as TestWorkflows, with OpenAPI-like specs."),(0,l.kt)("h3",{id:"usage"},"Usage"),(0,l.kt)("p",null,"To pass the configuration, along with the template name,\nsimply pass the config too."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: testworkflows.testkube.io/v1\nkind: TestWorkflowTemplate\nmetadata:\n  name: playwright\nspec:\n  config:\n    version:\n      type: string\n      default: '1.32.3'\n    workers:\n      type: integer\n      default: 2\n\n  steps:\n  - run:\n      image: 'mcr.microsoft.com/playwright:v{{ config.version }}'\n      shell: 'npm ci && npx playwright test --workers {{ config.workers }}'\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: testworkflows.testkube.io/v1\nkind: TestWorkflow\nmetadata:\n  name: overview--example-16\nspec:\n  content:\n    git:\n      uri: 'https://github.com/kubeshop/testkube'\n      paths:\n      - 'test/playwright/executor-tests/playwright-project'\n\n  container:\n    workingDir: '/data/repo/test/playwright/executor-tests/playwright-project'\n\n  steps:\n  - template:\n      name: 'playwright'\n      config:\n        version: '1.33.3'\n")),(0,l.kt)("h2",{id:"isolation-expansion"},"Isolation (Expansion)"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"There are 3 ways to include the TestWorkflowTemplate, that differ with the level of isolation (or rather - expansion).")),(0,l.kt)("h3",{id:"top-level---use"},"Top Level - Use"),(0,l.kt)("p",null,"A template can be included with the top-level use (array) clause - this way it will be included in the TestWorkflow, and all its defaults will be available in the whole TestWorkflow."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"This is the only place where constructs like Job and Pod setup can be specified.")),(0,l.kt)("h3",{id:"step-level---use"},"Step Level - Use"),(0,l.kt)("p",null,"When the template is included with use (array) on step level, all its defaults and steps will be included only for the step it\u2019s included in."),(0,l.kt)("h3",{id:"step-level---template"},"Step Level - Template"),(0,l.kt)("p",null,"If you want to have a full isolation, so that no defaults will be expanded anywhere else (i.e., common envs for execution), you can use template (object) instruction. It\u2019s not expanding any defaults outside the step."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: testworkflows.testkube.io/v1\nkind: TestWorkflow\nmetadata:\n  name: overview--example-17\nspec:\n  use:\n  - name: 'close-istio'\n  - name: 'append-serviceaccount'\n\n  steps:\n  - use:\n    - name: 'obtain-aws-credentials-envs'\n    shell: 'echo $AWS_ACCESS_KEY_ID'\n\n  - content:\n      git:\n        uri: 'https://github.com/kubeshop/testkube'\n    workingDir: '/data/repo'\n    template:\n    - name: 'cypress'\n")))}u.isMDXComponent=!0}}]);