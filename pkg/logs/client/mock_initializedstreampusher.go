// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/kubeshop/testkube/pkg/logs/client (interfaces: InitializedStreamPusher)

// Package client is a generated GoMock package.
package client

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	events "github.com/kubeshop/testkube/pkg/logs/events"
)

// MockInitializedStreamPusher is a mock of InitializedStreamPusher interface.
type MockInitializedStreamPusher struct {
	ctrl     *gomock.Controller
	recorder *MockInitializedStreamPusherMockRecorder
}

// MockInitializedStreamPusherMockRecorder is the mock recorder for MockInitializedStreamPusher.
type MockInitializedStreamPusherMockRecorder struct {
	mock *MockInitializedStreamPusher
}

// NewMockInitializedStreamPusher creates a new mock instance.
func NewMockInitializedStreamPusher(ctrl *gomock.Controller) *MockInitializedStreamPusher {
	mock := &MockInitializedStreamPusher{ctrl: ctrl}
	mock.recorder = &MockInitializedStreamPusherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInitializedStreamPusher) EXPECT() *MockInitializedStreamPusherMockRecorder {
	return m.recorder
}

// Init mocks base method.
func (m *MockInitializedStreamPusher) Init(arg0 context.Context, arg1 string) (StreamMetadata, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Init", arg0, arg1)
	ret0, _ := ret[0].(StreamMetadata)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Init indicates an expected call of Init.
func (mr *MockInitializedStreamPusherMockRecorder) Init(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Init", reflect.TypeOf((*MockInitializedStreamPusher)(nil).Init), arg0, arg1)
}

// Push mocks base method.
func (m *MockInitializedStreamPusher) Push(arg0 context.Context, arg1 string, arg2 *events.Log) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Push", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// Push indicates an expected call of Push.
func (mr *MockInitializedStreamPusherMockRecorder) Push(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Push", reflect.TypeOf((*MockInitializedStreamPusher)(nil).Push), arg0, arg1, arg2)
}

// PushBytes mocks base method.
func (m *MockInitializedStreamPusher) PushBytes(arg0 context.Context, arg1 string, arg2 []byte) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PushBytes", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// PushBytes indicates an expected call of PushBytes.
func (mr *MockInitializedStreamPusherMockRecorder) PushBytes(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PushBytes", reflect.TypeOf((*MockInitializedStreamPusher)(nil).PushBytes), arg0, arg1, arg2)
}
