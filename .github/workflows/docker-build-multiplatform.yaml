name: Docker images
on:
  push:
    branches:
      - 1352-build-arm-image

jobs:
  docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: "amd64"
            platform: linux/amd64
          - name: "arm64"
            platform: linux/arm64

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
    #    with:
      #    platforms: linux/amd64,linux/arm64

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Go Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Docker Cache
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get tag version
        id: vars
        run: |
          echo ::set-output name=tag::${GITHUB_REF#refs/*/}
          docker buildx ls

      - name: Docker meta for API Server
        id: meta_api_server
        uses: docker/metadata-action@v3
        with:
          images: kubeshop/testkube-api-server
          tags: |
            type=sha

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: build/api-server/Dockerfile
          platforms: ${{ matrix.platforms }}
          push: true
          tags: ${{ steps.meta_api_server.outputs.tags }}
          build-args: |
            TOKEN=${{ secrets.CI_BOT_TOKEN }}
            VERSION=${{ steps.vars.outputs.tag }}
            COMMIT=${{ github.sha }}
            ANALYTICS_TRACKING_ID=${{secrets.TESTKUBE_API_GA_MEASUREMENT_ID}}
            ANALYTICS_API_KEY=${{secrets.TESTKUBE_API_GA_MEASUREMENT_SECRET}}
