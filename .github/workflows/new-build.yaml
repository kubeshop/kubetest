name: Docker images building and pushing for API and executors
on:
  push:
#    tags:
#      - "v[0-9]+.[0-9]+.[0-9]+-"
    branches:
      - ci/add-builds-to-depot

env:
  ALPINE_IMAGE: alpine:3.20.3
  BUSYBOX_IMAGE: busybox:1.36.1-musl

permissions:
  id-token: write # needed for keyless signing with cosign and for depot

jobs:
  api:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Depot CLI
        uses: depot/setup-action@v1

      - uses: sigstore/cosign-installer@v3.7.0
      - uses: anchore/sbom-action/download-syft@v0.17.7

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create Docker tags and metadata for the API
        id: api-meta
        uses: docker/metadata-action@v5
        with:
          bake-target: 'api-meta'
          images: |
            kubeshop/testkube
          tags: |
            type=ref,event=branch
#            type=semver,pattern={{version}}

      - name: Build
        uses: depot/bake-action@v1
        with:
          files: |
            ./docker-bake.hcl
            ${{ steps.api-meta.outputs.bake-file }}
          targets: api
          provenance: mode=max
          push: false
          sbom: true
        env:
          ANALYTICS_TRACKING_ID: ${{secrets.TESTKUBE_API_GA_MEASUREMENT_ID}}
          ANALYTICS_API_KEY: ${{secrets.TESTKUBE_API_GA_MEASUREMENT_SECRET}}
          SLACK_BOT_CLIENT_ID: ${{secrets.TESTKUBE_SLACK_BOT_CLIENT_ID}}
          SLACK_BOT_CLIENT_SECRET: ${{secrets.TESTKUBE_SLACK_BOT_CLIENT_SECRET}}
          SEGMENTIO_KEY: ${{secrets.TESTKUBE_API_SEGMENTIO_KEY}}
          CLOUD_SEGMENTIO_KEY: ${{secrets.TESTKUBE_API_CLOUD_SEGMENTIO_KEY}}
          ALPINE_IMAGE: ${{ env.ALPINE_IMAGE }}
          BUSYBOX_IMAGE: ${{ env.BUSYBOX_IMAGE }}

